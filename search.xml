<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Tpclash配置</title>
      <link href="/2024/09/17/ops/Tpclash%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/09/17/ops/Tpclash%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>   tpclash是基于clash开发，tpclash最大的优点是不需要繁琐的配置，运行稳定，并提供了后台管理页面。由于是打包好的二进制文件，哪怕是在docker中也能很轻松的跑起来。（仅支持Linux和安卓）</p><h1 id="下载tpclash"><a href="#下载tpclash" class="headerlink" title="下载tpclash"></a>下载tpclash</h1><blockquote><p>Github地址</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="operator">/</span><span class="operator">/</span>github.com<span class="operator">/</span>TPClash<span class="operator">/</span>tpclash</span><br></pre></td></tr></table></figure><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/09/17/17265573212338.jpg" alt="仅支持安卓和Linux"></p><ul><li>根据实际情况选择下载</li></ul><h1 id="配置tpclash"><a href="#配置tpclash" class="headerlink" title="配置tpclash"></a>配置tpclash</h1><h2 id="1-创建-clash-yaml-文件"><a href="#1-创建-clash-yaml-文件" class="headerlink" title="1. 创建 clash.yaml 文件"></a>1. 创建 clash.yaml 文件</h2><ul><li>tpclash 默认配置文件路径在 <code>/etc/clash.yaml</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/clash.yaml</span><br></pre></td></tr></table></figure></li><li>如果配置文件在其他位置需要使用 <code>-c</code> 手动指定</li></ul><h2 id="2-复制-example-yaml-模板文件内容到clash-yaml"><a href="#2-复制-example-yaml-模板文件内容到clash-yaml" class="headerlink" title="2.复制 example.yaml 模板文件内容到clash.yaml"></a>2.复制 <code>example.yaml</code> 模板文件内容到<code>clash.yaml</code></h2><blockquote><p>只复制到 <code>proxies</code> ，<code>proxies</code> 后面是节点信息，需替换成自己的。 </p></blockquote><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/09/17/17265576107063.jpg"></p><blockquote><p>示例内容：</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HTTP(S) and SOCKS4(A)/SOCKS5 server on the same port</span></span><br><span class="line"><span class="attr">mixed-port:</span> <span class="number">7890</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set to true to allow connections to the local-end server from</span></span><br><span class="line"><span class="comment"># other LAN IP addresses</span></span><br><span class="line"><span class="attr">allow-lan:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is only applicable when `allow-lan` is `true`</span></span><br><span class="line"><span class="comment"># &#x27;*&#x27;: bind all IP addresses</span></span><br><span class="line"><span class="comment"># 192.168.122.11: bind a single IPv4 address</span></span><br><span class="line"><span class="comment"># &quot;[aaaa::a8aa:ff:fe09:57d8]&quot;: bind a single IPv6 address</span></span><br><span class="line"><span class="attr">bind-address:</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Clash router working mode</span></span><br><span class="line"><span class="comment"># rule: rule-based packet routing</span></span><br><span class="line"><span class="comment"># global: all packets will be forwarded to a single endpoint</span></span><br><span class="line"><span class="comment"># direct: directly forward the packets to the Internet</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">rule</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Clash by default prints logs to STDOUT</span></span><br><span class="line"><span class="comment"># info / warning / error / debug / silent</span></span><br><span class="line"><span class="attr">log-level:</span> <span class="string">debug</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When set to false, resolver won&#x27;t translate hostnames to IPv6 addresses</span></span><br><span class="line"><span class="attr">ipv6:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># RESTful web API listening address</span></span><br><span class="line"><span class="attr">external-controller:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:9090</span></span><br><span class="line"><span class="attr">secret:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static hosts for DNS server and connection establishment (like /etc/hosts)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)</span></span><br><span class="line"><span class="comment"># Non-wildcard domain names have a higher priority than wildcard domain names</span></span><br><span class="line"><span class="comment"># e.g. foo.example.com &gt; *.example.com &gt; .example.com</span></span><br><span class="line"><span class="comment"># P.S. +.foo.com equals to .foo.com and foo.com</span></span><br><span class="line"><span class="attr">hosts:</span> <span class="literal">null</span></span><br><span class="line"><span class="comment"># &#x27;*.clash.dev&#x27;: 127.0.0.1</span></span><br><span class="line"><span class="comment"># &#x27;.dev&#x27;: 127.0.0.1</span></span><br><span class="line"><span class="comment"># &#x27;alpha.clash.dev&#x27;: &#x27;::1&#x27;</span></span><br><span class="line"><span class="attr">profile:</span></span><br><span class="line">  <span class="comment"># Store the `select` results in $HOME/.config/clash/.cache</span></span><br><span class="line">  <span class="comment"># set false If you don&#x27;t want this behavior</span></span><br><span class="line">  <span class="comment"># when two different configurations have groups with the same name, the selected values are shared</span></span><br><span class="line">  <span class="attr">store-selected:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># persistence fakeip</span></span><br><span class="line">  <span class="attr">store-fake-ip:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Outbound interface name</span></span><br><span class="line"><span class="comment">#interface-name: &#123;&#123;IfName&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ebpf:</span></span><br><span class="line"><span class="comment">#  redirect-to-tun:</span></span><br><span class="line"><span class="comment">#    - &#123;&#123;IfName&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">stack:</span> <span class="string">system</span> <span class="comment"># or gvisor</span></span><br><span class="line">  <span class="attr">dns-hijack:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">any:53</span></span><br><span class="line">  <span class="attr">auto-route:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto-redir:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto-detect-interface:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">iptables:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#routing-mark: 666</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DNS server settings</span></span><br><span class="line"><span class="comment"># This section is optional. When not present, the DNS server will be disabled.</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">listen:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:1053</span></span><br><span class="line">  <span class="attr">enhanced-mode:</span> <span class="string">fake-ip</span></span><br><span class="line">  <span class="attr">fake-ip-range:</span> <span class="number">198.18</span><span class="number">.0</span><span class="number">.1</span><span class="string">/16</span></span><br><span class="line">  <span class="comment"># use-hosts: true # lookup hosts and return IP record</span></span><br><span class="line">  <span class="comment"># Hostnames in this list will not be resolved with fake IPs</span></span><br><span class="line">  <span class="comment"># i.e. questions to these domain names will always be answered with their</span></span><br><span class="line">  <span class="comment"># real IP addresses</span></span><br><span class="line">  <span class="attr">fake-ip-filter:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*.lan&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*.local&#x27;</span></span><br><span class="line">  <span class="comment"># These nameservers are used to resolve the DNS nameserver hostnames below.</span></span><br><span class="line">  <span class="comment"># Specify IP addresses only</span></span><br><span class="line">  <span class="attr">default-nameserver:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">119.29</span><span class="number">.29</span><span class="number">.29</span></span><br><span class="line">  <span class="comment"># Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.</span></span><br><span class="line">  <span class="comment"># All DNS questions are sent directly to the nameserver, without proxies</span></span><br><span class="line">  <span class="comment"># involved. Clash answers the DNS question with the first result gathered.</span></span><br><span class="line">  <span class="attr">nameserver:</span></span><br><span class="line">    &#123;&#123;<span class="string">range</span> <span class="string">$index</span>, <span class="string">$server</span> <span class="string">:=</span> <span class="string">DefaultDNS</span>&#125;&#125;<span class="bullet">-</span> &#123;&#123;<span class="string">$server</span>&#125;&#125;</span><br><span class="line">    &#123;&#123;<span class="string">end</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># GEOIP库</span></span><br><span class="line"><span class="attr">geodata-mode:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">geox-url:</span></span><br><span class="line">  <span class="attr">geoip:</span> <span class="string">&quot;https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat&quot;</span></span><br><span class="line">  <span class="attr">geosite:</span> <span class="string">&quot;https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat&quot;</span></span><br><span class="line">  <span class="attr">mmdb:</span> <span class="string">&quot;https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在这里添加您的节点</span></span><br><span class="line"><span class="attr">proxies:</span></span><br></pre></td></tr></table></figure><h2 id="3-复制clas节点信息到clash-yaml"><a href="#3-复制clas节点信息到clash-yaml" class="headerlink" title="3.复制clas节点信息到clash.yaml"></a>3.复制clas节点信息到<code>clash.yaml</code></h2><blockquote><p>在clash中找到自己的配置文件并打开，复制<code>proxies</code> 后的内容到<code>clash.yaml</code></p></blockquote><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/09/17/17265578455364.jpg"><br><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/09/17/17265578542527.jpg"><br><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/09/17/17265588212544.jpg"></p><h2 id="4-安装tpclash"><a href="#4-安装tpclash" class="headerlink" title="4. 安装tpclash"></a>4. 安装tpclash</h2><blockquote><p>安装<code>Systemd</code>服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./tpclash install --config /etc/clash.yaml  #如改了配置文件地址需更换配置文件路径</span><br></pre></td></tr></table></figure><blockquote><p>启动tpclash</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start tpclash</span><br></pre></td></tr></table></figure><ul><li>systemctl 管理常用命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- 启动服务: systemctl start tpclash</span><br><span class="line">- 停止服务: systemctl stop tpclash</span><br><span class="line">- 重启服务: systemctl restart tpclash</span><br><span class="line">- 开启自启动: systemctl <span class="built_in">enable</span> tpclash</span><br><span class="line">- 关闭自启动: systemctl <span class="built_in">disable</span> tpclash</span><br><span class="line">- 查看日志: journalctl -fu tpclash</span><br><span class="line">- 重载服务配置: systemctl daemon-reload</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-访问管理页面"><a href="#5-访问管理页面" class="headerlink" title="5.访问管理页面"></a>5.访问管理页面</h2><blockquote><p>ip:9090&#x2F;ui&#x2F;</p></blockquote><ul><li>默认的地址 <a href="http://127.0.0.1:9090/">http://127.0.0.1:9090</a> 可能进不去，需手动添加内网IP进行访问<br><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/09/17/17265585976896.jpg"></li></ul>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tpclash,上网,clash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare for SaaS服务实现内网穿透</title>
      <link href="/2024/07/09/ops/Cloudflare/"/>
      <url>/2024/07/09/ops/Cloudflare/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前提： 需要有公网IPv6(<a href="https://www.test-ipv6.com/index.html.zh_CN" title="测试网站">点击访问测试网站</a>)</p></blockquote><h2 id="原理概述"><a href="#原理概述" class="headerlink" title="原理概述"></a>原理概述</h2><ul><li>利用Cloudflare 代理功能，将域名解析到内网服务器IPv6地址，实现客户端IPv4  IPv6双盏访问</li></ul><ul><li>利用Cloudflare 回源机制，实现国内访问加速</li></ul><p><img src="/media/17205277879641.jpg"></p><blockquote><p>环境说明</p></blockquote><ul><li>使用2个域名，分别为<a href="http://www.a.com/">www.a.com</a> （主力域名）、 cdn.b.com（傀儡域名）。 </li><li><a href="http://www.a.com/">www.a.com</a>  使用腾讯云解析到Cloudflare边缘节点</li><li>cdn.b.com 使用Cloudflare解析到本地服务器公网IPv6地址</li><li>在Cloudflare面板中设定 自定义主机为<a href="http://www.a.com/">www.a.com</a> ， 回退源地址cdn.b.com</li></ul><blockquote><p>流程</p></blockquote><ol><li>用户请求 <a href="http://www.a.com/">www.a.com</a>  。</li><li>腾讯云根据DNS解析记录，返回Cloudflare边缘节点地址</li><li>用户访问Cloudflare边缘节点地址，由于在Cloudflare面板中设定了 <code>自定义主机为www.a.com</code> ，<code>回退源地址为cdn.b.com</code>，最终Cloudflare边缘节点会访问 <code>cdn.b.com</code><br>4.由于cdn.b.com解析的是本地服务器的ipv6地址，最终访问的就是本地服务器（没有cdn缓存的情况下）<br>5.本地服务器返回请求给用户</li></ol><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>准备2个域名，一个主力域名，一个傀儡域名</li><li>傀儡域名托管到Cloudflare，主力域名在哪无所谓</li></ol><h3 id="Cloudflare面板设定"><a href="#Cloudflare面板设定" class="headerlink" title="Cloudflare面板设定"></a>Cloudflare面板设定</h3><ol><li>将傀儡域名的子域名解析到本地服务器的IPv6地址，并打开代理。例如cdn.b.com</li></ol><p><img src="/media/17205278788800.jpg"></p><ol start="2"><li>将上一步的傀儡子域名添加到回退源（cdn.b.com）。</li></ol><p><img src="/media/17205279697889.jpg"></p><ol start="3"><li>添加自定义主机名（填写主力域名，也就是用户最终访问的域名），例如<a href="http://www.a.com/">www.a.com</a></li></ol><p><img src="/media/17205281205621.jpg"></p><ul><li>验证方式分为<code>txt验证</code>,<code>HTTP 验证</code>，推荐使用txt验证<br>(1)主力域名（<a href="http://www.a.com)/">www.a.com）</a> 添加cname记录 到 傀儡域名（cdn.b.com）<br>(2)根据提示添加txt记录到主力域名（<a href="http://www.a.com),注意txt名称只要`_cf-custom-hostname`/">www.a.com），注意txt名称只要`_cf-custom-hostname`</a> 不需要 .<a href="http://www.a.com./">www.a.com。</a></li></ul><p><img src="/media/17205285518846.jpg"></p><ol start="4"><li>验证完成后，访问<a href="http://www.a.com即可访问到本地服务器的资源。但是国内访问大概率网速很差，可参见[Cloudflare使用]">www.a.com即可访问到本地服务器的资源。但是国内访问大概率网速很差，可参见[Cloudflare使用]</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare,内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/03/ops/cros%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2024/07/03/ops/cros%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="nginx处理跨域"><a href="#nginx处理跨域" class="headerlink" title="nginx处理跨域"></a>nginx处理跨域</h1><p>在<code>location</code>块增加如下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if ($request_method = &#x27;OPTIONS&#x27;) &#123;</span><br><span class="line">            add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;</span><br><span class="line">            add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;GET, POST, OPTIONS, PUT, DELETE&#x27;;</span><br><span class="line">            add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;Content-Type&#x27;;</span><br><span class="line">            return 200;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>增加后的代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen       80;</span><br><span class="line">     server_name  localhost;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     location / &#123;</span><br><span class="line">       root    /app/www;</span><br><span class="line">       try_files $uri $uri/ /index.html;</span><br><span class="line">       index  index.html index.htm;</span><br><span class="line"></span><br><span class="line">        if ($request_method = &#x27;OPTIONS&#x27;) &#123;</span><br><span class="line">            add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;</span><br><span class="line">            add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;GET, POST, OPTIONS, PUT, DELETE&#x27;;</span><br><span class="line">            add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;Content-Type&#x27;;</span><br><span class="line">            return 200;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cloudflare Tunnel 配置（含TCP）</title>
      <link href="/2024/06/23/ops/cloudflare%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/2024/06/23/ops/cloudflare%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<p>通过cloudflare Tunnel 对http&#x2F;tcp协议内网穿透</p><span id="more"></span><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>不同于frp，cloudflare在穿透除<code>http/https</code>外的服务，都需要客户端安装<code>cloudflared</code></p><ul><li>http&#x2F;https协议： 只需要服务端配置，客户端访问即可</li><li>tcp&#x2F;ssh&#x2F;smb等协议：服务端需要配置，<code>客户端需要安装cloudflared代理到本地才能访问</code></li></ul><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><h3 id="1-服务端安装cloudflared"><a href="#1-服务端安装cloudflared" class="headerlink" title="1. 服务端安装cloudflared"></a>1. 服务端安装cloudflared</h3><p>参见官方文档：<a href="https://cloudflared.cn/get-started/create-local-tunnel/#_1-%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85cloudflared">https://cloudflared.cn/get-started/create-local-tunnel/#_1-%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85cloudflared</a></p><h3 id="2-认证cloudflared"><a href="#2-认证cloudflared" class="headerlink" title="2.认证cloudflared"></a>2.认证cloudflared</h3><ol><li>登录账号</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel login</span><br></pre></td></tr></table></figure><ul><li>如果服务端带GPI桌面会自动打开浏览器登录cloudflare</li><li>如果没有GPI桌面，运行命令后会给出一串URL，复制到个人电脑打开，并登录cloudflare账号</li></ul><ol start="2"><li>验证是否成功</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> ~/.cloudflared/cert.pem  <span class="comment">#没有则代表失败，一般是网络问题</span></span><br></pre></td></tr></table></figure><ul><li>登录成功后，会在<code>~/.cloudflared/</code>下生成<code>cert.pem</code> 文件</li></ul><h3 id="3-创建隧道"><a href="#3-创建隧道" class="headerlink" title="3.创建隧道"></a>3.创建隧道</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel <span class="keyword">create</span>  隧道名称(自己起名)</span><br></pre></td></tr></table></figure><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/06/23/17191281422353.jpg"></p><ul><li>创建成功后，在cloudflare页面上会出现一条隧道，复制隧道ID</li></ul><h3 id="4-创建配置文件"><a href="#4-创建配置文件" class="headerlink" title="4.创建配置文件"></a>4.创建配置文件</h3><p>在 <code>/etc/cloudflared</code> 目录下创建 <code>config.yml</code>文件(没有cloudflared文件夹就创建，当在这个路径是为了步骤6注册服务）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tunnel: 隧道ID</span><br><span class="line">credentials-file: ~/.cloudflared/隧道ID.json  #根据自己情况改路径</span><br><span class="line"></span><br><span class="line">ingress:</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">dsm</span></span><br><span class="line">  - hostname: 子域名(例如：qunhui.test.com )</span><br><span class="line">    service: http://localhost:5000  </span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">SSH</span></span><br><span class="line">  - hostname: ssh.test.cn</span><br><span class="line">    service: ssh://localhost:22</span><br><span class="line">  - service: http_status:404</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>hostname： 填最终需要访问的子域名</li><li>service：需要内网穿透的地址</li></ul><h3 id="5-添加DNS记录"><a href="#5-添加DNS记录" class="headerlink" title="5.添加DNS记录"></a>5.添加DNS记录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel route dns 隧道ID或隧道名称  子域名</span><br></pre></td></tr></table></figure><ul><li><p>配置文件中写了多少条service就添加多少条DNS记录。</p></li><li><p>比如上面我配了两条service：</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel route dns 隧道ID qunhui.test.com</span><br><span class="line">cloudflared tunnel route dns 隧道ID ssh.test.cn</span><br></pre></td></tr></table></figure><h3 id="6-手动启动隧道测试"><a href="#6-手动启动隧道测试" class="headerlink" title="6.手动启动隧道测试"></a>6.手动启动隧道测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared  tunnel --config /etc/cloudflared/config.yml run 隧道ID或隧道名称</span><br></pre></td></tr></table></figure><ul><li>config.yml路径根据实际情况填写</li></ul><h3 id="7-测试"><a href="#7-测试" class="headerlink" title="7.测试"></a>7.测试</h3><ul><li>如果是HTTP&#x2F;HTTPS服务，直接浏览器访问验证</li><li>如果是HTTP&#x2F;HTTPS以外服务，参见<code>客户端配置</code>章节</li></ul><h3 id="8-注册服务"><a href="#8-注册服务" class="headerlink" title="8.注册服务"></a>8.注册服务</h3><ul><li>测试无误后，结束手动开启的隧道，执行以下命令即可</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注册服务</span></span><br><span class="line"> cloudflared service install</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动cloudflared</span></span><br><span class="line"> systemctl start cloudflared</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启启动</span></span><br><span class="line"> systemctl enable cloudflared</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看服务状态</span></span><br><span class="line">systemctl status cloudflared</span><br></pre></td></tr></table></figure><h2 id="客户端配置（HTTP-HTTPS以外服务需要配置客户端）"><a href="#客户端配置（HTTP-HTTPS以外服务需要配置客户端）" class="headerlink" title="客户端配置（HTTP&#x2F;HTTPS以外服务需要配置客户端）"></a>客户端配置（HTTP&#x2F;HTTPS以外服务需要配置客户端）</h2><ul><li>这里说的客户端就是访问者，你没听错，区别与frp，cloudflared就是这尿性。</li><li>客户端需要安装cloudflared代理到本地才能访问</li></ul><h3 id="1-客户端安装cloudflared"><a href="#1-客户端安装cloudflared" class="headerlink" title="1.客户端安装cloudflared"></a>1.客户端安装cloudflared</h3><p>参见官方文档：<a href="https://cloudflared.cn/get-started/create-local-tunnel/#_1-%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85cloudflared">https://cloudflared.cn/get-started/create-local-tunnel/#_1-%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85cloudflared</a></p><h3 id="2-客户端认证cloudflared"><a href="#2-客户端认证cloudflared" class="headerlink" title="2.客户端认证cloudflared"></a>2.客户端认证cloudflared</h3><ol><li>登录账号</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared tunnel login</span><br></pre></td></tr></table></figure><ul><li>登录cloudflare账号</li></ul><ol start="2"><li>验证是否成功</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> ~/.cloudflared/cert.pem  <span class="comment">#没有则代表失败，一般是网络问题</span></span><br></pre></td></tr></table></figure><ul><li>登录成功后，会在<code>~/.cloudflared/</code>下生成<code>cert.pem</code> 文件</li></ul><h3 id="3-客户端配置"><a href="#3-客户端配置" class="headerlink" title="3.客户端配置"></a>3.客户端配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared access tcp --hostname 子域名 --listener 127.0.0.1:端口（端口随意）</span><br></pre></td></tr></table></figure><p>以上文为例，本人用ssh.test.cn作为ssh服务的域名，则执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflared access tcp --hostname ssh.test.cn 127.0.0.1:2222</span><br></pre></td></tr></table></figure><ul><li>最终的访问地址就是 <code>127.0.0.1:2222</code> ssh访问： <code>ssh  -p2222 root@127.0.0.1</code> </li><li>其他TCP服务原理一致，如果有多个TCP服务，那就本地多映射几个端口</li></ul>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node-red 搭建</title>
      <link href="/2024/04/25/node-red/%E4%B8%80.node-red%20%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/04/25/node-red/%E4%B8%80.node-red%20%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="docker部署"><a href="#docker部署" class="headerlink" title="docker部署"></a>docker部署</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -p 1880:1880 -v node_red_data:/data --name mynodered nodered/node-red</span><br></pre></td></tr></table></figure><h1 id="npm安装"><a href="#npm安装" class="headerlink" title="npm安装"></a>npm安装</h1><blockquote><p>安装</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g --unsafe-perm node-red</span><br></pre></td></tr></table></figure><blockquote><p>启动</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node-red</span><br></pre></td></tr></table></figure><blockquote><p>访问</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:1880/</span><br></pre></td></tr></table></figure><blockquote><p>常见问题</p></blockquote><ul><li>macos下需要用sudo权限</li><li>无法安装请更换淘宝源</li></ul>]]></content>
      
      
      <categories>
          
          <category> node-red </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node-red,iot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Modbus应用</title>
      <link href="/2024/04/25/node-red/%E4%BA%8C.Mobbus%E8%AF%BB%E5%8F%96%E5%86%99%E5%85%A5/"/>
      <url>/2024/04/25/node-red/%E4%BA%8C.Mobbus%E8%AF%BB%E5%8F%96%E5%86%99%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="测试准备"><a href="#测试准备" class="headerlink" title="测试准备"></a>测试准备</h1><blockquote><p>Tcp 服务端建立</p></blockquote><ul><li><p>软件推荐使用： <a href="https://qsaker.gitee.io/qsak/">xTools</a> （支持macos、Windows等）</p></li><li><p>根据下图创建modbus-tcp的服务端<br><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140944196242.jpg"><br>本人modbus—tcp服务端IP地址：10.21.2.171</p></li></ul><blockquote><p>node-red 安装<code>node-red-contrib-modbus</code>插件</p></blockquote><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140939786707.jpg"></p><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140940112951.jpg"></p><h1 id="modbus读寄存器"><a href="#modbus读寄存器" class="headerlink" title="modbus读寄存器"></a>modbus读寄存器</h1><h2 id="03-读保持寄存器"><a href="#03-读保持寄存器" class="headerlink" title="03 读保持寄存器"></a>03 读保持寄存器</h2><blockquote><p>创建<code>Modbus-Read</code> 及 <code>Debug</code>节点</p></blockquote><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140946842843.jpg"></p><blockquote><p>配置<code>Modbus-Read</code>节点</p></blockquote><ul><li>server配置</li></ul><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140951803735.jpg"></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Type</td><td>选择通讯方式，这里选TCP</td></tr><tr><td>Host</td><td>Tcp服务端IP地址</td></tr><tr><td>端口</td><td>默认502</td></tr><tr><td>Tcp Type</td><td>DEFAULT</td></tr></tbody></table><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140954031459.jpg"></p><p> sever配置没问题的话，节点状态会变为<code>connected</code>状态</p><ul><li>其他参数配置</li></ul><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140947843021.jpg"></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Unit-ld</td><td>485地址</td></tr><tr><td>FC</td><td>选择Modbus 功能码</td></tr><tr><td>Address</td><td>寄存器地址，本人测试的是 00001 寄存器</td></tr><tr><td>Quantity</td><td>指定要读取或写入的寄存器或线圈的数量</td></tr><tr><td>Poll Rate</td><td>轮循时间</td></tr></tbody></table><blockquote><p>测试验证</p></blockquote><ul><li>修改保持寄存器的值（00001）</li></ul><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140956518787.jpg"></p><ul><li>测试数据读取</li></ul><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140954943868.jpg"></p><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140955196995.jpg"></p><p>打开调试模式，点击<code>Modbus Read</code> 节点后的小方块，执行一次</p><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140959076719.jpg"><br>可以看到已经读取到了寄存器数值</p><h1 id="Modbus写寄存器"><a href="#Modbus写寄存器" class="headerlink" title="Modbus写寄存器"></a>Modbus写寄存器</h1><h2 id="05-强置单线圈"><a href="#05-强置单线圈" class="headerlink" title="05 强置单线圈"></a>05 强置单线圈</h2><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140960634107.jpg"></p><ul><li>设置一个<code>inject</code> 节点，并删除参数（用于手动执行流程）</li></ul><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140961238264.jpg"></p><ul><li>设置注入内容</li></ul><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140962728838.jpg"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msg.payload = 0;    # 或者  true/false</span><br><span class="line">return msg;</span><br></pre></td></tr></table></figure><ul><li>配置<code>Modbus-Write</code>节点</li></ul><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140963052759.jpg"></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Unit-ld</td><td>485地址</td></tr><tr><td>FC</td><td>选择Modbus 功能码</td></tr><tr><td>Address</td><td>寄存器地址，本人测试的是 00000 寄存器</td></tr><tr><td>server</td><td>Tcp服务端相关配置</td></tr></tbody></table><ul><li>验证</li></ul><p>手动更改 <code>00000</code>寄存器值为 <code>0001</code></p><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140966226410.jpg"></p><p>点击执行</p><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140967179223.jpg"></p><p><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/26/17140967315282.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> node-red </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iot,node-red </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Macos蓝牙/wifi睡眠及唤醒</title>
      <link href="/2024/04/15/ops/macos%E8%93%9D%E7%89%99%E3%80%81wifi%E7%9D%A1%E7%9C%A0%E5%8F%8A%E5%94%A4%E9%86%92/"/>
      <url>/2024/04/15/ops/macos%E8%93%9D%E7%89%99%E3%80%81wifi%E7%9D%A1%E7%9C%A0%E5%8F%8A%E5%94%A4%E9%86%92/</url>
      
        <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><ul><li>sleepwatcher： 支持在Macbook休眠或唤醒时执行脚本</li><li>blueutil：命令行开关蓝牙工具</li></ul><h1 id="sleepwatcher-安装"><a href="#sleepwatcher-安装" class="headerlink" title="sleepwatcher 安装"></a>sleepwatcher 安装</h1><blockquote><p>安装sleepwatcher</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install sleepwatcher</span><br></pre></td></tr></table></figure><blockquote><p>注册启动<code>sleepwatcher</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start sleepwatcher</span><br></pre></td></tr></table></figure><h1 id="blueutil安装"><a href="#blueutil安装" class="headerlink" title="blueutil安装"></a>blueutil安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install blueutil</span><br></pre></td></tr></table></figure><h1 id="检查配置文件"><a href="#检查配置文件" class="headerlink" title="检查配置文件"></a>检查配置文件</h1><ul><li><p>执行 <code>ps -ef|grep sleepwatcher</code> 查看是否启动成功，如下是启动成功<br><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/16/17131741886901.jpg"></p></li><li><p>参数说明：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-s:  睡眠后运行脚本路径（默认是家目录下的.sleep）</span><br><span class="line">-w:  唤醒后运行脚本路径（默认是家目录下的.wakeup）</span><br></pre></td></tr></table></figure></li><li><p>检查是否存在<code>~/.sleep 文件</code>及 <code>~/.wakeup 文件</code> ,若不存在直接创建。</p></li><li><p>赋予<code>~/.sleep 文件</code>及 <code>~/.wakeup 文件</code> 可执行权限 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x ~/.sleep</span><br><span class="line">chmod a+x ~/.wakeup</span><br></pre></td></tr></table></figure></li></ul><h1 id="sleep编写"><a href="#sleep编写" class="headerlink" title=".sleep编写"></a>.sleep编写</h1><blockquote><p>睡眠关闭蓝牙</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$(which blueutil) -p 0&quot; &gt;&gt; ~/.sleep</span><br></pre></td></tr></table></figure><blockquote><p>睡眠关闭wifi</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;networksetup -setairportpower en0 off&quot; &gt;&gt; ~/.sleep</span><br></pre></td></tr></table></figure><h1 id="wakeup编写"><a href="#wakeup编写" class="headerlink" title=".wakeup编写"></a>.wakeup编写</h1><blockquote><p>唤醒开启蓝牙</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$(which blueutil) -p 1&quot; &gt;&gt; ~/.wakeup</span><br></pre></td></tr></table></figure><blockquote><p>唤醒开启wifi</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;networksetup -setairportpower en0 on&quot; &gt;&gt; ~/.wakeup</span><br></pre></td></tr></table></figure><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><ul><li>蓝牙唤醒很慢： 删除 <code>唤醒开启wifi</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24-04-1</title>
      <link href="/2024/04/01/%E6%9D%82%E4%B9%B1%E6%97%A0%E7%AB%A0/%E6%97%A5%E5%BF%97/"/>
      <url>/2024/04/01/%E6%9D%82%E4%B9%B1%E6%97%A0%E7%AB%A0/%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1fd10544d79b7ce0f2fdff594f7b54c907c417ac119a8f5d412fe3edcf0a275b">4630436162ade97ba2718b7d0c4b3b63aa2ab1619d9cdbb4bb5fd57226dc61d2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂乱无章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂乱无章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 环境变量</title>
      <link href="/2024/04/01/ops/env%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2024/04/01/ops/env%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>docker 环境变量</p><span id="more"></span><h3 id="方式一、创建-env-文件-（推荐）"><a href="#方式一、创建-env-文件-（推荐）" class="headerlink" title="方式一、创建.env  文件 （推荐）"></a>方式一、创建<code>.env</code>  文件 （推荐）</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">key</span><span class="operator">=</span>value</span><br></pre></td></tr></table></figure><blockquote><p>Dockerfile 使用环境变量</p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ARG</span> key</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>Docker-compose 使用环境变量</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">MYSQL_DATABASE</span>: <span class="variable">$&#123;key&#125;</span></span><br></pre></td></tr></table></figure><h3 id="方式二、在Dockerfile中设置环境变量"><a href="#方式二、在Dockerfile中设置环境变量" class="headerlink" title="方式二、在Dockerfile中设置环境变量"></a>方式二、在Dockerfile中设置环境变量</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENV <span class="tag">&lt;<span class="name">KEY</span>&gt;</span> <span class="tag">&lt;<span class="name">VALUE</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方式三、在docker-compose-yml中设置环境变量"><a href="#方式三、在docker-compose-yml中设置环境变量" class="headerlink" title="方式三、在docker-compose.yml中设置环境变量"></a>方式三、在<a href="https://so.csdn.net/so/search?q=docker&spm=1001.2101.3001.7020">docker</a>-compose.yml中设置环境变量</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">environment:</span></span><br><span class="line"><span class="symbol">  MYSQL_DATABASE:</span> <span class="string">&quot;my_database&quot;</span></span><br><span class="line"><span class="symbol">  MYSQL_PASSWORD:</span> <span class="string">&quot;mysql&quot;</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/ywk_hax/article/details/86531348">(11条消息) Dockerfile与docker-compose设置环境变量_一许流星的博客-CSDN博客_docker-compose 环境变量</a></p>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ffmpeg 将本地视频推流</title>
      <link href="/2024/04/01/ops/ffmpeg%E5%B0%86%E6%9C%AC%E5%9C%B0%E8%A7%86%E9%A2%91%E6%8E%A8%E6%B5%81/"/>
      <url>/2024/04/01/ops/ffmpeg%E5%B0%86%E6%9C%AC%E5%9C%B0%E8%A7%86%E9%A2%91%E6%8E%A8%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<p>将视频文件使用ffmpeg进行循环推流</p><span id="more"></span><h3 id="1-安装ffmpeg"><a href="#1-安装ffmpeg" class="headerlink" title="1.安装ffmpeg"></a>1.安装ffmpeg</h3><ul><li><p>推荐使用可执行文件配置方法</p><blockquote><p>官网下载： <a href="http://ffmpeg.org/download.html">Download FFmpeg</a></p></blockquote></li></ul><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h339iu9ytmj20u00vwade.jpg" style="zoom:25%; " /><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h339kyzdzsj21h20o60y8.jpg" style="zoom:25%;" /><ul><li>下载解压后根据实际情况配置环境变量即可，我是放到&#x2F;usr&#x2F;local下的</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export <span class="title class_">PATH</span>=<span class="variable">$PATH</span><span class="symbol">:/usr/local/ffmpeg/bin</span></span><br></pre></td></tr></table></figure><h3 id="2-将视频进行推流"><a href="#2-将视频进行推流" class="headerlink" title="2.将视频进行推流"></a>2.将视频进行推流</h3><h4 id="1-推RTMP流："><a href="#1-推RTMP流：" class="headerlink" title="(1)推RTMP流："></a>(1)推RTMP流：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -stream_loop -1 -i <span class="string">&quot;xxx.mp4&quot;</span> -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://xxx.xxx.xxxx.xxx:1935/live/a</span><br></pre></td></tr></table></figure><h4 id="2-推HLS流"><a href="#2-推HLS流" class="headerlink" title="(2)推HLS流"></a>(2)推HLS流</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -stream_loop -1 -i <span class="string">&quot;xxx.mp4&quot;</span> -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://xxx.xxx.xxxx.xxx:1935/live/b</span><br></pre></td></tr></table></figure><blockquote><p><code>-stream_loop -1</code>  是循环将这个视频进行推流，如果报错无法识别 <code>-stream_loop -1</code> 参数,说明ffmpeg版本过低，需要安装高版本。</p></blockquote><h3 id="3-拉流测试"><a href="#3-拉流测试" class="headerlink" title="3.拉流测试"></a>3.拉流测试</h3><h4 id="1-访问RTMP流"><a href="#1-访问RTMP流" class="headerlink" title="(1)访问RTMP流"></a>(1)访问RTMP流</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtmp:<span class="regexp">//</span>xxx.xxx.xxxx.xxx:<span class="number">1935</span><span class="regexp">/live/</span>a</span><br></pre></td></tr></table></figure><h4 id="2-访问HLS流"><a href="#2-访问HLS流" class="headerlink" title="(2)访问HLS流"></a>(2)访问HLS流</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>xxx.xxx.xxxx.xxx<span class="regexp">/hls/</span>b.m3u8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ios 砸壳</title>
      <link href="/2024/04/01/ops/ios%E5%8F%8D%E7%BC%96%E8%AF%91%E5%8F%8A%E7%A0%B8%E5%A3%B3/"/>
      <url>/2024/04/01/ops/ios%E5%8F%8D%E7%BC%96%E8%AF%91%E5%8F%8A%E7%A0%B8%E5%A3%B3/</url>
      
        <content type="html"><![CDATA[<p>从Appstore直接下载的app是经过加壳的，需要”砸壳”</p><span id="more"></span><h3 id="一、苹果手机环境配置"><a href="#一、苹果手机环境配置" class="headerlink" title="一、苹果手机环境配置"></a>一、苹果手机环境配置</h3><h4 id="1-越狱"><a href="#1-越狱" class="headerlink" title="1.越狱"></a>1.越狱</h4><ul><li><p>12.5 及以下版本推荐使用爱思助手安装<code>unc0ver</code></p></li><li><p>安装<code>unc0ver</code> 后，在设置–通用—描述文件中信任<code>unc0ver</code>证书</p></li><li><p>打开<code>unc0ver</code> 点击 <code>jailbreak</code> ，期间设备会重启，重启之后检查手机是否安装上了 Cydia ，如果没有则重复此步奏，一般在10次内</p></li><li><p>如果<code>unc0ver</code> 提示失败，手动关机，开机，继续打开<code>unc0ver</code> 点击 <code>jailbreak</code>，直到安装上了 Cydia</p></li></ul><h4 id="2-安装frida"><a href="#2-安装frida" class="headerlink" title="2.安装frida"></a>2.安装frida</h4><ul><li>打开cydia添加源：<code>https://build.frida.re</code></li><li>搜索安装软件 <code>frida</code></li></ul><h4 id="3-安装openssh"><a href="#3-安装openssh" class="headerlink" title="3.安装openssh"></a>3.安装openssh</h4><ul><li>搜索安装 <code>openssh</code></li><li>安装完成后，电脑使用ssh协议连接手机ip , 用户名 root  密码：alpine</li></ul><h4 id="4-安装需要杂壳的目标APP"><a href="#4-安装需要杂壳的目标APP" class="headerlink" title="4.安装需要杂壳的目标APP"></a>4.安装需要杂壳的目标APP</h4><h3 id="二、Mac-os-环境配置"><a href="#二、Mac-os-环境配置" class="headerlink" title="二、Mac os 环境配置"></a>二、Mac os 环境配置</h3><h4 id="1-安装基础软件"><a href="#1-安装基础软件" class="headerlink" title="1.安装基础软件"></a>1.安装基础软件</h4><ul><li>python   </li><li>pip</li></ul><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">wget</span> <span class="string">https</span>://<span class="string">bootstrap</span>.<span class="string">pypa</span>.<span class="string">io</span>/<span class="built_in">get-pip.py</span></span><br><span class="line"><span class="string">sudo</span> <span class="string">python</span> <span class="built_in">get-pip.py</span></span><br></pre></td></tr></table></figure><ul><li><p>wget</p></li><li><p>usbmuxd</p></li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>usbmuxd</span><br></pre></td></tr></table></figure><ul><li>清理残留</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> ~/get-pip.py</span><br></pre></td></tr></table></figure><h4 id="2-安装frida-for-mac"><a href="#2-安装frida-for-mac" class="headerlink" title="2.安装frida for mac"></a>2.安装frida for mac</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip <span class="keyword">install</span> frida</span><br></pre></td></tr></table></figure><ul><li>假如报一下错误</li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uninstalling <span class="keyword">a</span> distutils installed project (<span class="literal">six</span>) has been deprecated <span class="keyword">and</span> will be removed <span class="keyword">in</span> <span class="keyword">a</span> future <span class="built_in">version</span>. This is due <span class="built_in">to</span> <span class="keyword">the</span> fact that uninstalling <span class="keyword">a</span> distutils project will only partially uninstall <span class="keyword">the</span> project.</span><br></pre></td></tr></table></figure><ul><li>使用以下命令安装：</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip <span class="keyword">install </span>frida –upgrade –ignore-<span class="keyword">installed </span>six</span><br></pre></td></tr></table></figure><h4 id="3-配置frida-ios-dump环境"><a href="#3-配置frida-ios-dump环境" class="headerlink" title="3.配置frida-ios-dump环境"></a>3.配置frida-ios-dump环境</h4><ul><li>下载源码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /opt/dump &amp;&amp; <span class="built_in">cd</span> /opt/dump &amp;&amp; sudo git <span class="built_in">clone</span> https://github.com/AloneMonkey/frida-ios-dump</span><br></pre></td></tr></table></figure><ul><li>安装依赖</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install -r <span class="regexp">/opt/</span><span class="keyword">dump</span><span class="regexp">/frida-ios-dump/</span>requirements.txt --upgrade</span><br></pre></td></tr></table></figure><ul><li>修改dump.py参数</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/opt/</span><span class="keyword">dump</span><span class="regexp">/frida-ios-dump/</span><span class="keyword">dump</span>.py</span><br></pre></td></tr></table></figure><p>找到如下几行</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">User</span> = <span class="string">&#x27;root&#x27;</span></span><br><span class="line"><span class="attr">Password</span> = <span class="string">&#x27;alpine&#x27;</span></span><br><span class="line"><span class="attr">Host</span> = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line"><span class="attr">Port</span> = <span class="number">2222</span></span><br></pre></td></tr></table></figure><ul><li>Password 改为 alpine ，即手机root密码</li></ul><h3 id="三、开始砸壳"><a href="#三、开始砸壳" class="headerlink" title="三、开始砸壳"></a>三、开始砸壳</h3><h4 id="1-开启端口转发"><a href="#1-开启端口转发" class="headerlink" title="1.开启端口转发"></a>1.开启端口转发</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">iproxy</span> <span class="number">2222</span> <span class="number">22</span></span><br></pre></td></tr></table></figure><h4 id="2-新建终端通过ssh连接手机"><a href="#2-新建终端通过ssh连接手机" class="headerlink" title="2. 新建终端通过ssh连接手机"></a>2. 新建终端通过ssh连接手机</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.xxx </span><br></pre></td></tr></table></figure><h4 id="3-新建终端开始杂壳"><a href="#3-新建终端开始杂壳" class="headerlink" title="3.新建终端开始杂壳"></a>3.新建终端开始杂壳</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python <span class="regexp">/opt/</span><span class="keyword">dump</span><span class="regexp">/frida-ios-dump/</span><span class="keyword">dump</span>.py  应用名称</span><br></pre></td></tr></table></figure><p>如果报错找不到python模块，检查pip安装的模块对应的是哪个python版本，例如：使用的是python3x版本，那么杂壳命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3.x /opt/dump/frida-ios-dump/dump.py  应用名称  <span class="comment">#x为具体版本号，比如我电脑有Python2  python2.7  python3.9 根据实际情况来</span></span><br></pre></td></tr></table></figure><ul><li>应用名称就是手机桌面显示的名称</li><li>杂壳完毕后会在步奏3终端路径生成ipa文件，此文件即是杂壳后的ipa，可以直接使用Hopper Disassembler 进行反编译</li></ul><h2 id="ios反编译"><a href="#ios反编译" class="headerlink" title="ios反编译"></a>ios反编译</h2><h4 id="1-安装Hopper-Disassembler"><a href="#1-安装Hopper-Disassembler" class="headerlink" title="1.安装Hopper Disassembler"></a>1.安装Hopper Disassembler</h4><h4 id="2-安装Class-Decompile"><a href="#2-安装Class-Decompile" class="headerlink" title="2.安装Class-Decompile"></a>2.安装Class-Decompile</h4><ul><li>下载源码</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GitHub https:<span class="regexp">//gi</span>thub.com<span class="regexp">/poboke/</span>Class-Decompile</span><br></pre></td></tr></table></figure><ul><li>将下载的Class Decompile.py文件放到~&#x2F;Library&#x2F;Application Support&#x2F;Hopper&#x2F;Scripts目录里</li></ul><h4 id="3-解压ipa包"><a href="#3-解压ipa包" class="headerlink" title="3.解压ipa包"></a>3.解压ipa包</h4><h4 id="image-20210421101850001-Users-sky-Library-Application-Support-typora-user-images-image-20210421101850001-png"><a href="#image-20210421101850001-Users-sky-Library-Application-Support-typora-user-images-image-20210421101850001-png" class="headerlink" title="![image-20210421101850001](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210421101850001.png)"></a>![image-20210421101850001](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210421101850001.png)</h4><h4 id="4-找到二进制文件拖入到Hopper-Disassembler"><a href="#4-找到二进制文件拖入到Hopper-Disassembler" class="headerlink" title="4.找到二进制文件拖入到Hopper Disassembler"></a>4.找到二进制文件拖入到Hopper Disassembler</h4><h4 id="5-导出伪代码"><a href="#5-导出伪代码" class="headerlink" title="5.导出伪代码"></a>5.导出伪代码</h4><p>等待Hopper Disassembler分析完成后，点击菜单栏 Scripts – Class-Decompile  – Decompile all class</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>www.jianshu.com<span class="regexp">/p/</span><span class="number">7</span>aa9b9488ffa</span><br><span class="line">https:<span class="regexp">//</span>www.jianshu.com<span class="regexp">/p/</span><span class="number">5</span>b465c9e2fb2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH动态端口转发访问服务器内网</title>
      <link href="/2024/04/01/ops/SSH%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E7%BD%91/"/>
      <url>/2024/04/01/ops/SSH%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<p>ssh端口转发，实现访问ssh服务器内网</p><span id="more"></span><h2 id="使用工具："><a href="#使用工具：" class="headerlink" title="使用工具："></a>使用工具：</h2><ul><li>SSH Tunnel动态端口转发工具SecureCRT 也可作为动态端口转发工具  </li><li>Proxifier          socks5代理工具          socks5工具根据个人喜好选择即可，浏览器可以选择Switchy Omega扩展</li></ul><h2 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h2><p>1.通过SSH Tunnel添加服务器SSH信息</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gw6wvjrfp4j316y0u00vm.jpg" alt="image-20211107213349879"></p><p>2.设置动态端口转发，转发到本地某个端口，设置后开启连接</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gw6wvrb5fxj318g0rymzg.jpg" alt="image-20211107213417609"></p><p>3.使用Proxifier 配置socks5代理</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gw6wyps1snj320k0u00yb.jpg" alt="image-20211107213702021"></p>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多阶段构建打包项目</title>
      <link href="/2024/04/01/ops/%E5%A4%9A%E9%98%B6%E6%AE%B5%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE/"/>
      <url>/2024/04/01/ops/%E5%A4%9A%E9%98%B6%E6%AE%B5%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>docker 多阶段构建打包项目</p><span id="more"></span><h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><ul><li>拿JAVA项目为例</li></ul><ol><li>使用MVN镜像下载源码并打包项目</li><li>使用jdk镜像，从上面的MVN镜像中复制jar包并启动</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">FROM maven:3.6.3-openjdk-8 AS builder</span><br><span class="line"> <span class="comment">#  AS builder 起别名</span></span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">mkdir</span> /build</span><br><span class="line"><span class="comment"># 创建临时文件</span></span><br><span class="line"></span><br><span class="line">ADD src /build/src</span><br><span class="line"><span class="comment">#将 src目录复制到临时目录</span></span><br><span class="line"></span><br><span class="line">ADD pom.xml /build</span><br><span class="line"><span class="comment"># 将 pom文件复制到临时目录</span></span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">cd</span> /build &amp;&amp; mvn -B -ntp package</span><br><span class="line"><span class="comment"># 打包</span></span><br><span class="line"></span><br><span class="line">FROM adoptopenjdk/openjdk8:alpine-jre</span><br><span class="line"><span class="comment"># 获取jre</span></span><br><span class="line"></span><br><span class="line">COPY --from=builder /build/target/ems-0.0.1-SNAPSHOT.jar /ems.jar</span><br><span class="line"><span class="comment">#从标记点 拷贝jar包 并改名</span></span><br><span class="line"></span><br><span class="line">CMD [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/ems.jar&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 声明运行方式</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建 stmp 流媒体服务器</title>
      <link href="/2024/04/01/ops/%E6%90%AD%E5%BB%BAstmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2024/04/01/ops/%E6%90%AD%E5%BB%BAstmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="一、所需资源"><a href="#一、所需资源" class="headerlink" title="一、所需资源"></a>一、所需资源</h3><h4 id="nginx源文件"><a href="#nginx源文件" class="headerlink" title="nginx源文件"></a>nginx源文件</h4><blockquote><p>官网：<a href="https://nginx.org/download/">https://nginx.org/download/</a></p></blockquote><h4 id="nginx-rtmp-module-master-模块源文件"><a href="#nginx-rtmp-module-master-模块源文件" class="headerlink" title="nginx-rtmp-module-master 模块源文件"></a>nginx-rtmp-module-master 模块源文件</h4><blockquote><p>下载地址：<a href="https://github.com/arut/nginx-rtmp-module">https://github.com/arut/nginx-rtmp-module</a></p></blockquote><h3 id="二、配置步骤"><a href="#二、配置步骤" class="headerlink" title="二、配置步骤"></a>二、配置步骤</h3><h4 id="1-编译安装nginx及nginx-rtmp-module-master模块"><a href="#1-编译安装nginx及nginx-rtmp-module-master模块" class="headerlink" title="1.编译安装nginx及nginx-rtmp-module-master模块"></a>1.编译安装nginx及nginx-rtmp-module-master模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx --add-module=/root/nginx-rtmp-module-master</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="2-配置nginx配置文件"><a href="#2-配置nginx配置文件" class="headerlink" title="2.配置nginx配置文件"></a>2.配置nginx配置文件</h4><ul><li><p>配置文件末尾加</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">rtmp</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">1935</span>;</span><br><span class="line">        <span class="attribute">application</span> live &#123;</span><br><span class="line">            <span class="attribute">live</span> <span class="literal">on</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">application</span> hls &#123;</span><br><span class="line">            <span class="attribute">live</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">hls</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">hls_path</span> /tmp/hls;</span><br><span class="line">            <span class="attribute">hls_fragment</span> <span class="number">5s</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>server块中加</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /hls &#123;</span><br><span class="line"> <span class="comment">#解决跨域问题，否则浏览器无法播放</span></span><br><span class="line">           <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">&#x27;*&#x27;</span>;  </span><br><span class="line">           <span class="attribute">add_header</span> Access-Control-Allow-Credentials <span class="string">&quot;true&quot;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Headers  <span class="string">&#x27;token,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,XRequested-With&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">           <span class="section">types</span> &#123;</span><br><span class="line">               application/vnd.apple.<span class="attribute">mpegurl</span> m3u8;</span><br><span class="line">               video/<span class="attribute">mp2t</span>  ;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="attribute">root</span> /tmp;</span><br><span class="line">           <span class="attribute">add_header</span> Cache-Control <span class="literal">no</span>-cache;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><blockquote><p> <strong>注意跨域问题，否则可能会出现VLC可以正常播放，但是用vodeojs无法播放的情况</strong></p></blockquote><blockquote><p> 附上本人完整配置</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line"><span class="comment">#解决跨域问题，否则浏览器无法播放</span></span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">&#x27;*&#x27;</span>;  </span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Credentials <span class="string">&quot;true&quot;</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Headers  <span class="string">&#x27;token,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,XRequested-With&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">#解决跨域问题，否则浏览器无法播放</span></span><br><span class="line">        <span class="section">location</span> /hls &#123;</span><br><span class="line">            <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">&#x27;*&#x27;</span>;  </span><br><span class="line">            <span class="attribute">add_header</span> Access-Control-Allow-Credentials <span class="string">&quot;true&quot;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Headers  <span class="string">&#x27;token,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,XRequested-With&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="section">types</span> &#123;</span><br><span class="line">                application/vnd.apple.<span class="attribute">mpegurl</span> m3u8;</span><br><span class="line">                video/<span class="attribute">mp2t</span>  ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="attribute">root</span> /tmp;</span><br><span class="line">            <span class="attribute">add_header</span> Cache-Control <span class="literal">no</span>-cache;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">rtmp</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">1935</span>;</span><br><span class="line">        <span class="attribute">application</span> live &#123;</span><br><span class="line">            <span class="attribute">live</span> <span class="literal">on</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">application</span> hls &#123;</span><br><span class="line">            <span class="attribute">live</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">hls</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">hls_path</span> /tmp/hls;</span><br><span class="line">            <span class="attribute">hls_fragment</span> <span class="number">5s</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="至此已完成rtmp-服务端搭建，只需要推流到rtmp服务端-，-客户端拉流即可。"><a href="#至此已完成rtmp-服务端搭建，只需要推流到rtmp服务端-，-客户端拉流即可。" class="headerlink" title="至此已完成rtmp 服务端搭建，只需要推流到rtmp服务端 ， 客户端拉流即可。"></a>至此已完成<code>rtmp</code> 服务端搭建，只需要推流到<code>rtmp服务端</code> ， 客户端拉流即可。</h4><h4 id="推流拉流教程参见使用ffmpeg推流"><a href="#推流拉流教程参见使用ffmpeg推流" class="headerlink" title="推流拉流教程参见使用ffmpeg推流"></a>推流拉流教程参见<code>使用ffmpeg推流</code></h4>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jumpserver</title>
      <link href="/2024/04/01/ops/jumpserver/"/>
      <url>/2024/04/01/ops/jumpserver/</url>
      
        <content type="html"><![CDATA[<p>jumpserver 堡垒机搭建</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>所在机器：192.168.0.209</p><p>配置文件路径：&#x2F;opt&#x2F;jumpserver   （一般无需任何配置）</p><h2 id="安装管理"><a href="#安装管理" class="headerlink" title="安装管理"></a>安装管理</h2><ul><li>docker安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://github.com/jumpserver/jumpserver/releases/download/v2.9.2/quick_start.sh | bash</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li>使用<code> jmsctl.sh</code>脚本管理jumpserver，脚本位置<code>/opt/jumpserver-installer-v2.7.1</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Installation Commands:</span><br><span class="line">  install           安装 JumpServer</span><br><span class="line">  upgrade [version] 升级 JumpServer</span><br><span class="line">  check_update      Reconfiguration JumpServer</span><br><span class="line">  reconfig          Check <span class="keyword">for</span> updates JumpServer</span><br><span class="line"></span><br><span class="line">Management Commands:</span><br><span class="line">  start             启动 JumpServer</span><br><span class="line">  stop              停止 JumpServer</span><br><span class="line">  close             关闭 JumpServer</span><br><span class="line">  restart           重启 JumpServer</span><br><span class="line">  status            检查 JumpServer</span><br><span class="line">  down              下线 JumpServer </span><br><span class="line"></span><br><span class="line">More Commands:</span><br><span class="line">  backup_db         备份数据库</span><br><span class="line">  <span class="built_in">tail</span> [service]    View <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h2 id="操作文档"><a href="#操作文档" class="headerlink" title="操作文档"></a>操作文档</h2><h3 id="1-用户管理"><a href="#1-用户管理" class="headerlink" title="1.用户管理"></a>1.用户管理</h3><p>![image-20210422144608919](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422144608919.png)</p><h3 id="2-资产管理"><a href="#2-资产管理" class="headerlink" title="2.资产管理"></a>2.资产管理</h3><h3 id="概念说明"><a href="#概念说明" class="headerlink" title="概念说明"></a>概念说明</h3><ul><li><p>普通用户（用户）： 工作人员账户</p></li><li><p>管理用户： 服务器真实用户，如root</p></li><li><p>系统账户： jumpserver在真实服务器上创建的用户</p></li></ul><p>Jumpserver 运行原理为： </p><ol><li>Jumpserver 通过<code>管理用户</code> 登录真实服务器  ，在真实服务器上创建<code>系统用户</code>，系统用户可以为dev  ops  姓名等。    </li><li>授权<code>普通用户</code> 服务器资产 和   <code>系统用户</code> ，比如给普通用户张三授权的<code>系统账户</code>是”zhangsan”,那么张三登录的服务器的用户就是 “zhangsan”</li></ol><h3 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h3><ul><li>管理用户是指jumpserver登录真实服务器的用户，也就是真实服务器的用户，linux一般为<code>root</code>; windows一般为<code>administrator</code></li></ul><p>![image-20210422145054211](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422145054211.png)</p><h3 id="系统用户"><a href="#系统用户" class="headerlink" title="系统用户"></a>系统用户</h3><ul><li>登录到服务器的账户，jumpserver会在真实服务器创建linux用户</li></ul><p>![image-20210422150539157](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422150539157.png)</p><p>![image-20210422150809797](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422150809797.png)</p><h3 id="添加资产"><a href="#添加资产" class="headerlink" title="添加资产"></a>添加资产</h3><p>![image-20210422151526890](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422151526890.png)</p><h3 id="应用管理"><a href="#应用管理" class="headerlink" title="应用管理"></a>应用管理</h3><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><ul><li><p>mysql对应的账户必须开启远程访问权限</p></li><li><p>首先在系统用户中添加<code>mysql</code>真实存在的用户 （相当于一个登录凭证）</p></li></ul><p>![image-20210422153057362](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422153057362.png)</p><ul><li>在应用管理–数据库  配置数据库连接地址</li></ul><p>![image-20210422153354165](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422153354165.png)</p><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><h4 id="1-资产授权"><a href="#1-资产授权" class="headerlink" title="1.资产授权"></a>1.资产授权</h4><p>![image-20210422153855556](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422153855556.png)</p><h4 id="2-应用授权"><a href="#2-应用授权" class="headerlink" title="2.应用授权"></a>2.应用授权</h4><p>![image-20210422154053217](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422154053217.png)</p><h3 id="会话管理"><a href="#会话管理" class="headerlink" title="会话管理"></a>会话管理</h3><h4 id="web终端"><a href="#web终端" class="headerlink" title="web终端"></a>web终端</h4><p>![image-20210422154255831](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422154255831.png)</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.jumpserver.org/zh/master/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>supervisor</title>
      <link href="/2024/04/01/ops/supervisor%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2024/04/01/ops/supervisor%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>进程管理工具</p><span id="more"></span><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>Supervisor类似systemctl，是一个进程管理工具，进程异常可自动重启进程</li><li>优点：易于维护，写法简单，可提供web页面管理进程，无需写守护脚本</li><li>缺点：依赖python环境</li><li>注意： 管理的进程必须要以前台模式运行</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="1-安装Supervisor"><a href="#1-安装Supervisor" class="headerlink" title="1. 安装Supervisor"></a>1. 安装Supervisor</h3><ul><li>方法一、yum安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install supervisor</span><br></pre></td></tr></table></figure><ul><li>方法二、pip安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><h3 id="2-生成主配置文件"><a href="#2-生成主配置文件" class="headerlink" title="2.生成主配置文件"></a>2.生成主配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo_supervisord_conf &gt; /etc/supervisord.conf</span><br></pre></td></tr></table></figure><ul><li>无特殊需求使用默认主配置文件即可</li></ul><h3 id="3-启动Supervisor"><a href="#3-启动Supervisor" class="headerlink" title="3.启动Supervisor"></a>3.启动Supervisor</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl -c <span class="regexp">/etc/</span>supervisord.conf</span><br></pre></td></tr></table></figure><h3 id="4-配置开机启动"><a href="#4-配置开机启动" class="headerlink" title="4.配置开机启动"></a>4.配置开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> supervisord.service</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>为服务编写supervisor配置文件，新建  <code>xxx.ini</code> 文件，内容如下</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[program:名称]<span class="comment">#服务名称，管理服务根据此名称进行管理，必须唯一不能重复</span></span><br><span class="line">directory=/data/wwwroot<span class="comment">#command命令起始路径</span></span><br><span class="line"><span class="built_in">command</span>=/usr/bin/java -jar api.jar  <span class="comment">#启动命令，必须为前台启动命令，比如直接启动jar包，不能使用 nohup 及 &amp; 把进程放在后台</span></span><br><span class="line"></span><br><span class="line">autostart=<span class="literal">true</span><span class="comment">#supervisor启动的时候是否随着同时启动，默认True</span></span><br><span class="line">autorestart=<span class="literal">true</span><span class="comment">#程序异常退出后自动重启</span></span><br><span class="line">startretries = 3<span class="comment">#启动失败自动重试次数，默认是 3</span></span><br><span class="line">startsecs=5<span class="comment">#启动 xxx 秒后没有异常退出，就当作已经正常启动了</span></span><br><span class="line">user = root<span class="comment">#脚本运行的用户身份 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目</span></span><br><span class="line">stderr_logfile=/tmp/blog_stderr.log </span><br><span class="line">stdout_logfile=/tmp/blog_stdout.log </span><br><span class="line">redirect_stderr = <span class="literal">true</span><span class="comment">#把stderr重定向到stdout，默认 false</span></span><br><span class="line">stdout_logfile_maxbytes = 20MB<span class="comment">#stdout日志文件大小，默认 50MB</span></span><br><span class="line">stdout_logfile_backups = 20<span class="comment">#stdout日志文件备份数</span></span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[program:api]</span><br><span class="line">directory=/data/wwwroot/peppapig</span><br><span class="line"><span class="built_in">command</span>=/usr/bin/java -jar api.jar</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">startretries = 3</span><br><span class="line">startsecs=5</span><br><span class="line">redirect_stderr = <span class="literal">true</span></span><br><span class="line">stderr_logfile=/data/wwwlogs/peppapig/api_stderr.log</span><br><span class="line">stdout_logfile=/data/wwwlogs/peppapig/api_stdout.log </span><br><span class="line">stdout_logfile_maxbytes = 20MB</span><br><span class="line">stdout_logfile_backups = 20</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1-无法启动"><a href="#1-无法启动" class="headerlink" title="1.无法启动"></a>1.无法启动</h3><ul><li>检查服务配置文件中的日志路径是否存在</li><li>检查脚本运行的用户名是否存在</li><li>修改无误后运行以下命令启动supervisor</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="根据最新配置文件启动最新配置或有改动的进程"><a href="#根据最新配置文件启动最新配置或有改动的进程" class="headerlink" title="根据最新配置文件启动最新配置或有改动的进程"></a>根据最新配置文件启动最新配置或有改动的进程</h3><ul><li>增删改配置文件后使用以下命令</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">supervisorctl update</span></span><br></pre></td></tr></table></figure><h3 id="查看所有任务的状态"><a href="#查看所有任务的状态" class="headerlink" title="查看所有任务的状态"></a>查看所有任务的状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl status xxx <span class="comment">#服务名</span></span><br><span class="line">supervisorctl status  <span class="comment">#所有服务的状态</span></span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> supervisorctl start xxx  <span class="comment">#服务名</span></span><br><span class="line"> supervisorctl start all  <span class="comment">#启动所有服务</span></span><br></pre></td></tr></table></figure><h3 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> supervisorctl stop xxx  <span class="comment">#服务名</span></span><br><span class="line"> supervisorctl stop all  <span class="comment">#停止所有服务 </span></span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> supervisorctl restart xxx  <span class="comment">#服务名</span></span><br><span class="line">supervisorctl restart all<span class="comment">#重启所有服务名</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.jianshu.com/p/3c70e12b656a</span><br><span class="line">https://blog.csdn.net/lihao21/article/details/77689790</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows程序注册为服务</title>
      <link href="/2024/04/01/ops/windows%E7%A8%8B%E5%BA%8F%E6%B3%A8%E5%86%8C%E4%B8%BA%E6%9C%8D%E5%8A%A1/"/>
      <url>/2024/04/01/ops/windows%E7%A8%8B%E5%BA%8F%E6%B3%A8%E5%86%8C%E4%B8%BA%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>将windows程序注册为服务进行管理</p><span id="more"></span><h2 id="使用工具：instsrv-srvany"><a href="#使用工具：instsrv-srvany" class="headerlink" title="使用工具：instsrv+srvany"></a>使用工具：instsrv+srvany</h2><p>下载链接：<a href="https://pan.baidu.com/s/1gKu_WwVo-TeWXmrGAr9qjw">https://pan.baidu.com/s/1gKu_WwVo-TeWXmrGAr9qjw</a> 提取码：s1vm</p><h2 id="安装instsrv-srvany"><a href="#安装instsrv-srvany" class="headerlink" title="安装instsrv+srvany"></a>安装instsrv+srvany</h2><ol><li>将instsrv.exe和srvany.exe拷贝到<code>C:\WINDOWS\SysWOW64</code>目录下</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-注册服务"><a href="#1-注册服务" class="headerlink" title="1.注册服务"></a>1.注册服务</h3><p>（1）打开cmd</p><p>（2）运行命令：<code>instsrv xxxxxx C:\WINDOWS\SysWOW64\srvany.exe</code></p><ul><li>xxxxxx为自定义的服务名称</li></ul><h3 id="2-更改注册表"><a href="#2-更改注册表" class="headerlink" title="2. 更改注册表"></a>2. 更改注册表</h3><ol><li><p>打开注册表：（cmd中输入：<code>regedit</code>）</p></li><li><p>ctrl+F，搜索<code>xxxxxx</code>（xxxxxx为上一步注册的服务名）</p></li><li><p>右击<code>xxxxxx</code>  选择  <code>新建项</code>， 名称为<code>Parameters</code>  (Parameters固定，不能修改)</p></li><li><p>在新建项中右键新建以下值，类型选择 <code>字符串值</code></p><p>（1）<code>Application</code> 值 ：  EXE程序绝对路径，如 C:\dir\text.exe</p><p>  (2)  <code>AppDirectory</code> 值： EXE程序所在文件夹路径如：C:\dir</p><p>  (3) <code> AppParameters</code>值：程序启动所需要的参数</p></li></ol><h3 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3.启动服务"></a>3.启动服务</h3><ul><li>打开服务，找到注册的服务名启动即可</li></ul><h3 id="监控服务脚本"><a href="#监控服务脚本" class="headerlink" title="监控服务脚本"></a>监控服务脚本</h3><ul><li>服务自动启动脚本，保存为  bat 格式</li><li>ServerName 即上一步创建的服务名</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rem 定义循环间隔时间和监测的服务：</span><br><span class="line">set secs=60</span><br><span class="line">set srvname=&quot;ServerName&quot; </span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line">echo ========================================</span><br><span class="line">echo == 查询计算机服务的状态， ==</span><br><span class="line">echo == 每间隔%secs%秒种进行一次查询， ==</span><br><span class="line">echo == 如发现其停止，则立即启动。 ==</span><br><span class="line">echo ========================================</span><br><span class="line">echo.</span><br><span class="line">echo 此脚本监测的服务是：%srvname%</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">if %srvname%. == . goto end</span><br><span class="line"></span><br><span class="line">:chkit</span><br><span class="line">set svrst=0</span><br><span class="line">for /F &quot;tokens=1* delims= &quot; %%a in (&#x27;net start&#x27;) do if /I &quot;%%a %%b&quot; == %srvname% set svrst=1</span><br><span class="line">if %svrst% == 0 net start %srvname%</span><br><span class="line">set svrst=</span><br><span class="line">rem 下面的命令用于延时，否则可能会导致cpu单个核心满载。</span><br><span class="line">ping -n %secs% 127.0.0.1 &gt; nul</span><br><span class="line">goto chkit</span><br><span class="line"></span><br><span class="line">:end</span><br></pre></td></tr></table></figure><ul><li><p>开机启动脚本，保存为 <code>vbs</code> 格式</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> ws=WScript.CreateObject(“WScript.<span class="keyword">Shell</span>”)</span><br><span class="line">ws.<span class="keyword">Run</span> “C:\Users\Administrator\Desktop\aa.bat /start”,0    <span class="comment">//服务自动启动脚本绝对路径</span></span><br></pre></td></tr></table></figure><ul><li>将开机启动脚本放到<code>C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> 目录下</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/06/29/docker/docker%20copy%E4%B8%8A%E7%BA%A7%E7%9B%AE%E5%BD%95/"/>
      <url>/2022/06/29/docker/docker%20copy%E4%B8%8A%E7%BA%A7%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>直接 .&#x2F;文件就行，不需要 ..&#x2F;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/06/29/docker/env%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2022/06/29/docker/env%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="方式一、创建-env-文件-（推荐）"><a href="#方式一、创建-env-文件-（推荐）" class="headerlink" title="方式一、创建.env  文件 （推荐）"></a>方式一、创建<code>.env</code>  文件 （推荐）</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">key</span><span class="operator">=</span>value</span><br></pre></td></tr></table></figure><blockquote><p>Dockerfile 使用环境变量</p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ARG</span> key</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>Docker-compose 使用环境变量</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">MYSQL_DATABASE</span>: <span class="variable">$&#123;key&#125;</span></span><br></pre></td></tr></table></figure><h3 id="方式二、在Dockerfile中设置环境变量"><a href="#方式二、在Dockerfile中设置环境变量" class="headerlink" title="方式二、在Dockerfile中设置环境变量"></a>方式二、在Dockerfile中设置环境变量</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENV <span class="tag">&lt;<span class="name">KEY</span>&gt;</span> <span class="tag">&lt;<span class="name">VALUE</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方式三、在docker-compose-yml中设置环境变量"><a href="#方式三、在docker-compose-yml中设置环境变量" class="headerlink" title="方式三、在docker-compose.yml中设置环境变量"></a>方式三、在<a href="https://so.csdn.net/so/search?q=docker&spm=1001.2101.3001.7020">docker</a>-compose.yml中设置环境变量</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">environment:</span></span><br><span class="line"><span class="symbol">  MYSQL_DATABASE:</span> <span class="string">&quot;my_database&quot;</span></span><br><span class="line"><span class="symbol">  MYSQL_PASSWORD:</span> <span class="string">&quot;mysql&quot;</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/ywk_hax/article/details/86531348">(11条消息) Dockerfile与docker-compose设置环境变量_一许流星的博客-CSDN博客_docker-compose 环境变量</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/06/29/docker/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/06/29/docker/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<ul><li>dockerfile 从文件引入环境变量：   在docker-compose中设置  env_file</li><li>前台启动程序：  CMD [“command”, “-F”]</li><li>获取root权限： privileged: true</li><li>不启动服务但是想启用容器： cmd [“ tail” ,”-f”,” &#x2F;dev&#x2F;null”]</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/06/28/docker/%E5%A4%9A%E9%98%B6%E6%AE%B5%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/06/28/docker/%E5%A4%9A%E9%98%B6%E6%AE%B5%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><ul><li>拿JAVA项目为例</li></ul><ol><li>使用MVN镜像下载源码并打包项目</li><li>使用jdk镜像，从上面的MVN镜像中复制jar包并启动</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">FROM maven:3.6.3-openjdk-8 AS builder</span><br><span class="line"> <span class="comment">#  AS builder 起别名</span></span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">mkdir</span> /build</span><br><span class="line"><span class="comment"># 创建临时文件</span></span><br><span class="line"></span><br><span class="line">ADD src /build/src</span><br><span class="line"><span class="comment">#将 src目录复制到临时目录</span></span><br><span class="line"></span><br><span class="line">ADD pom.xml /build</span><br><span class="line"><span class="comment"># 将 pom文件复制到临时目录</span></span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">cd</span> /build &amp;&amp; mvn -B -ntp package</span><br><span class="line"><span class="comment"># 打包</span></span><br><span class="line"></span><br><span class="line">FROM adoptopenjdk/openjdk8:alpine-jre</span><br><span class="line"><span class="comment"># 获取jre</span></span><br><span class="line"></span><br><span class="line">COPY --from=builder /build/target/ems-0.0.1-SNAPSHOT.jar /ems.jar</span><br><span class="line"><span class="comment">#从标记点 拷贝jar包 并改名</span></span><br><span class="line"></span><br><span class="line">CMD [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/ems.jar&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 声明运行方式</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/10/30/docker/Docker-compose%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/10/30/docker/Docker-compose%E9%83%A8%E7%BD%B2lnmp%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-compose部署lnmp环境"><a href="#Docker-compose部署lnmp环境" class="headerlink" title="Docker-compose部署lnmp环境"></a>Docker-compose部署lnmp环境</h1><h2 id="1、目录结构"><a href="#1、目录结构" class="headerlink" title="1、目录结构"></a>1、目录结构</h2><h2 id="2、docker-compose"><a href="#2、docker-compose" class="headerlink" title="2、docker-compose"></a>2、docker-compose</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span>  版本</span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    hostname: mysql </span><br><span class="line">    restart: always</span><br><span class="line">    image: mysql:5.6</span><br><span class="line">    container_name: mysql         <span class="comment">#容器名称</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    volumes:                      <span class="comment">#卷挂载       </span></span><br><span class="line">      - mysql-config:/etc/mysql</span><br><span class="line">      - mysql-log:/var/log/mysql</span><br><span class="line">      - mysql-data:/var/lib/mysql</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456   <span class="comment">#密码貌似不能设置复杂，否则连接不上</span></span><br><span class="line">      MYSQL_USER: user</span><br><span class="line">      MYSQL_PASSWORD: user123</span><br><span class="line">    networks:                    <span class="comment">#网络</span></span><br><span class="line">      - lnmp</span><br><span class="line"></span><br><span class="line">  php:</span><br><span class="line">    hostname: php</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: php</span><br><span class="line">    build:</span><br><span class="line">      context: ./php             <span class="comment">#相对于docker-compose，php服务的Dockerfile所在的目录</span></span><br><span class="line">      dockerfile: Dockerfile     <span class="comment">#Dockerfile的文件名</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;9000:9000&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - nginx-html:/var/www/html <span class="comment">#php-fpm的/var/www/html 和  nginx 的网站根目录为同一路径否则会报错&quot;file not found&quot;</span></span><br><span class="line">      - php-config:/usr/local/etc</span><br><span class="line">    networks: </span><br><span class="line">      - lnmp</span><br><span class="line"></span><br><span class="line">  nginx:</span><br><span class="line">    hostname: nginx</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: nginx</span><br><span class="line">    image: nginx:1.17.0</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;89:80&quot;</span></span><br><span class="line">      - <span class="string">&quot;443:443&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - nginx-config:/etc/nginx</span><br><span class="line">      - nginx-log:/var/log/nginx</span><br><span class="line">      - nginx-html:/usr/share/nginx/html</span><br><span class="line">    networks: </span><br><span class="line">      - lnmp</span><br><span class="line"></span><br><span class="line">volumes:    <span class="comment">#定义挂载卷，在宿主机的路径：  /var/lib/docker/volumes/</span></span><br><span class="line">  mysql-config:</span><br><span class="line">  mysql-log:</span><br><span class="line">  mysql-data:</span><br><span class="line">  nginx-html:</span><br><span class="line">  php-config:</span><br><span class="line">  nginx-config:</span><br><span class="line">  nginx-log:</span><br><span class="line">networks:    <span class="comment">#定义网络</span></span><br><span class="line">  lnmp:</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、Dcokerfile-php"><a href="#3、Dcokerfile-php" class="headerlink" title="3、Dcokerfile(php)"></a>3、Dcokerfile(php)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">FROM php:7.0-fpm               </span><br><span class="line">RUN <span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Asia/Shanghai&quot;</span> &gt; /etc/timezone        </span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">&#x27;deb http://mirrors.163.com/debian/ stretch main non-free contrib \</span></span><br><span class="line"><span class="string">deb http://mirrors.163.com/debian/ stretch-updates main non-free contrib \</span></span><br><span class="line"><span class="string">deb http://mirrors.163.com/debian/ stretch-backports main non-free contrib \</span></span><br><span class="line"><span class="string">deb-src http://mirrors.163.com/debian/ stretch main non-free contrib \</span></span><br><span class="line"><span class="string">deb-src http://mirrors.163.com/debian/ stretch-updates main non-free contrib \</span></span><br><span class="line"><span class="string">deb-src http://mirrors.163.com/debian/ stretch-backports main non-free contrib \</span></span><br><span class="line"><span class="string">deb http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib \</span></span><br><span class="line"><span class="string">deb-src http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib&#x27;</span> &gt;/etc/apt/sources.list &amp;&amp; \</span><br><span class="line">apt-get update &amp;&amp; apt-get install -y \</span><br><span class="line">        libfreetype6-dev \</span><br><span class="line">        libjpeg62-turbo-dev \</span><br><span class="line">        libmcrypt-dev \</span><br><span class="line">        libpng-dev \</span><br><span class="line">        libmemcached-dev \</span><br><span class="line">        zlib1g-dev \</span><br><span class="line">        libcurl4-openssl-dev \</span><br><span class="line">        libxml2-dev \</span><br><span class="line">        --no-install-recommends &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/apt/lists/* \</span><br><span class="line">    &amp;&amp; docker-php-ext-install -j$(<span class="built_in">nproc</span>) \</span><br><span class="line">        iconv mcrypt gettext curl mysqli pdo pdo_mysql zip \</span><br><span class="line">        mbstring bcmath opcache xml simplexml sockets <span class="built_in">hash</span> soap \</span><br><span class="line">    &amp;&amp; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \</span><br><span class="line">    &amp;&amp; docker-php-ext-install -j$(<span class="built_in">nproc</span>) gd</span><br><span class="line">CMD [<span class="string">&quot;php-fpm&quot;</span>, <span class="string">&quot;-F&quot;</span>]</span><br><span class="line">RUN <span class="built_in">mv</span> /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、启动"><a href="#4、启动" class="headerlink" title="4、启动"></a>4、启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="5、配置nginx"><a href="#5、配置nginx" class="headerlink" title="5、配置nginx"></a>5、配置nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /var/lib/docker/lnmp_nginx-config/_data/conf.d/default.conf </span><br><span class="line"><span class="comment"># lnmp_nginx-config 前面的lnmp即docker-compose上层文件夹的名字，根据实际情况来</span></span><br></pre></td></tr></table></figure><ul><li>nginx配置文件如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root           /var/www/html;  </span><br><span class="line">        fastcgi_pass   php:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME   $document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
