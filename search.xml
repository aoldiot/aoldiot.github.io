<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Macos蓝牙/wifi睡眠及唤醒</title>
      <link href="/2024/04/15/ops/macos%E8%93%9D%E7%89%99%E3%80%81wifi%E7%9D%A1%E7%9C%A0%E5%8F%8A%E5%94%A4%E9%86%92/"/>
      <url>/2024/04/15/ops/macos%E8%93%9D%E7%89%99%E3%80%81wifi%E7%9D%A1%E7%9C%A0%E5%8F%8A%E5%94%A4%E9%86%92/</url>
      
        <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><ul><li>sleepwatcher： 支持在Macbook休眠或唤醒时执行脚本</li><li>blueutil：命令行开关蓝牙工具</li></ul><h1 id="sleepwatcher-安装"><a href="#sleepwatcher-安装" class="headerlink" title="sleepwatcher 安装"></a>sleepwatcher 安装</h1><blockquote><p>安装sleepwatcher</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install sleepwatcher</span><br></pre></td></tr></table></figure><blockquote><p>注册启动<code>sleepwatcher</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start sleepwatcher</span><br></pre></td></tr></table></figure><h1 id="blueutil安装"><a href="#blueutil安装" class="headerlink" title="blueutil安装"></a>blueutil安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install blueutil</span><br></pre></td></tr></table></figure><h1 id="检查配置文件"><a href="#检查配置文件" class="headerlink" title="检查配置文件"></a>检查配置文件</h1><ul><li><p>执行 <code>ps -ef|grep sleepwatcher</code> 查看是否启动成功，如下是启动成功<br><img src="http://img-bed-sky.oss-cn-beijing.aliyuncs.com/2024/04/16/17131741886901.jpg"></p></li><li><p>参数说明：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-s:  睡眠后运行脚本路径（默认是家目录下的.sleep）</span><br><span class="line">-w:  唤醒后运行脚本路径（默认是家目录下的.wakeup）</span><br></pre></td></tr></table></figure></li><li><p>检查是否存在<code>~/.sleep 文件</code>及 <code>~/.wakeup 文件</code> ,若不存在直接创建。</p></li><li><p>赋予<code>~/.sleep 文件</code>及 <code>~/.wakeup 文件</code> 可执行权限 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x ~/.sleep</span><br><span class="line">chmod a+x ~/.wakeup</span><br></pre></td></tr></table></figure></li></ul><h1 id="sleep编写"><a href="#sleep编写" class="headerlink" title=".sleep编写"></a>.sleep编写</h1><blockquote><p>睡眠关闭蓝牙</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$(which blueutil) -p 0&quot; &gt;&gt; ~/.sleep</span><br></pre></td></tr></table></figure><blockquote><p>睡眠关闭wifi</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;networksetup -setairportpower en0 off&quot; &gt;&gt; ~/.sleep</span><br></pre></td></tr></table></figure><h1 id="wakeup编写"><a href="#wakeup编写" class="headerlink" title=".wakeup编写"></a>.wakeup编写</h1><blockquote><p>唤醒开启蓝牙</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$(which blueutil) -p 1&quot; &gt;&gt; ~/.wakeup</span><br></pre></td></tr></table></figure><blockquote><p>唤醒开启wifi</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;networksetup -setairportpower en0 on&quot; &gt;&gt; ~/.wakeup</span><br></pre></td></tr></table></figure><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><ul><li>蓝牙唤醒很慢： 删除 <code>唤醒开启wifi</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24-04-1</title>
      <link href="/2024/04/01/%E6%9D%82%E4%B9%B1%E6%97%A0%E7%AB%A0/%E6%97%A5%E5%BF%97/"/>
      <url>/2024/04/01/%E6%9D%82%E4%B9%B1%E6%97%A0%E7%AB%A0/%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1fd10544d79b7ce0f2fdff594f7b54c907c417ac119a8f5d412fe3edcf0a275b">4630436162ade97ba2718b7d0c4b3b63aa2ab1619d9cdbb4bb5fd57226dc61d2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂乱无章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂乱无章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 环境变量</title>
      <link href="/2024/04/01/ops/env%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2024/04/01/ops/env%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>docker 环境变量</p><span id="more"></span><h3 id="方式一、创建-env-文件-（推荐）"><a href="#方式一、创建-env-文件-（推荐）" class="headerlink" title="方式一、创建.env  文件 （推荐）"></a>方式一、创建<code>.env</code>  文件 （推荐）</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">key</span><span class="operator">=</span>value</span><br></pre></td></tr></table></figure><blockquote><p>Dockerfile 使用环境变量</p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ARG</span> key</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>Docker-compose 使用环境变量</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">MYSQL_DATABASE</span>: <span class="variable">$&#123;key&#125;</span></span><br></pre></td></tr></table></figure><h3 id="方式二、在Dockerfile中设置环境变量"><a href="#方式二、在Dockerfile中设置环境变量" class="headerlink" title="方式二、在Dockerfile中设置环境变量"></a>方式二、在Dockerfile中设置环境变量</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENV <span class="tag">&lt;<span class="name">KEY</span>&gt;</span> <span class="tag">&lt;<span class="name">VALUE</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方式三、在docker-compose-yml中设置环境变量"><a href="#方式三、在docker-compose-yml中设置环境变量" class="headerlink" title="方式三、在docker-compose.yml中设置环境变量"></a>方式三、在<a href="https://so.csdn.net/so/search?q=docker&spm=1001.2101.3001.7020">docker</a>-compose.yml中设置环境变量</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">environment:</span></span><br><span class="line"><span class="symbol">  MYSQL_DATABASE:</span> <span class="string">&quot;my_database&quot;</span></span><br><span class="line"><span class="symbol">  MYSQL_PASSWORD:</span> <span class="string">&quot;mysql&quot;</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/ywk_hax/article/details/86531348">(11条消息) Dockerfile与docker-compose设置环境变量_一许流星的博客-CSDN博客_docker-compose 环境变量</a></p>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ffmpeg 将本地视频推流</title>
      <link href="/2024/04/01/ops/ffmpeg%E5%B0%86%E6%9C%AC%E5%9C%B0%E8%A7%86%E9%A2%91%E6%8E%A8%E6%B5%81/"/>
      <url>/2024/04/01/ops/ffmpeg%E5%B0%86%E6%9C%AC%E5%9C%B0%E8%A7%86%E9%A2%91%E6%8E%A8%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<p>将视频文件使用ffmpeg进行循环推流</p><span id="more"></span><h3 id="1-安装ffmpeg"><a href="#1-安装ffmpeg" class="headerlink" title="1.安装ffmpeg"></a>1.安装ffmpeg</h3><ul><li><p>推荐使用可执行文件配置方法</p><blockquote><p>官网下载： <a href="http://ffmpeg.org/download.html">Download FFmpeg</a></p></blockquote></li></ul><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h339iu9ytmj20u00vwade.jpg" style="zoom:25%; " /><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h339kyzdzsj21h20o60y8.jpg" style="zoom:25%;" /><ul><li>下载解压后根据实际情况配置环境变量即可，我是放到&#x2F;usr&#x2F;local下的</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export <span class="title class_">PATH</span>=<span class="variable">$PATH</span><span class="symbol">:/usr/local/ffmpeg/bin</span></span><br></pre></td></tr></table></figure><h3 id="2-将视频进行推流"><a href="#2-将视频进行推流" class="headerlink" title="2.将视频进行推流"></a>2.将视频进行推流</h3><h4 id="1-推RTMP流："><a href="#1-推RTMP流：" class="headerlink" title="(1)推RTMP流："></a>(1)推RTMP流：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -stream_loop -1 -i <span class="string">&quot;xxx.mp4&quot;</span> -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://xxx.xxx.xxxx.xxx:1935/live/a</span><br></pre></td></tr></table></figure><h4 id="2-推HLS流"><a href="#2-推HLS流" class="headerlink" title="(2)推HLS流"></a>(2)推HLS流</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -stream_loop -1 -i <span class="string">&quot;xxx.mp4&quot;</span> -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://xxx.xxx.xxxx.xxx:1935/live/b</span><br></pre></td></tr></table></figure><blockquote><p><code>-stream_loop -1</code>  是循环将这个视频进行推流，如果报错无法识别 <code>-stream_loop -1</code> 参数,说明ffmpeg版本过低，需要安装高版本。</p></blockquote><h3 id="3-拉流测试"><a href="#3-拉流测试" class="headerlink" title="3.拉流测试"></a>3.拉流测试</h3><h4 id="1-访问RTMP流"><a href="#1-访问RTMP流" class="headerlink" title="(1)访问RTMP流"></a>(1)访问RTMP流</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtmp:<span class="regexp">//</span>xxx.xxx.xxxx.xxx:<span class="number">1935</span><span class="regexp">/live/</span>a</span><br></pre></td></tr></table></figure><h4 id="2-访问HLS流"><a href="#2-访问HLS流" class="headerlink" title="(2)访问HLS流"></a>(2)访问HLS流</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>xxx.xxx.xxxx.xxx<span class="regexp">/hls/</span>b.m3u8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH动态端口转发访问服务器内网</title>
      <link href="/2024/04/01/ops/SSH%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E7%BD%91/"/>
      <url>/2024/04/01/ops/SSH%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<p>ssh端口转发，实现访问ssh服务器内网</p><span id="more"></span><h2 id="使用工具："><a href="#使用工具：" class="headerlink" title="使用工具："></a>使用工具：</h2><ul><li>SSH Tunnel动态端口转发工具SecureCRT 也可作为动态端口转发工具  </li><li>Proxifier          socks5代理工具          socks5工具根据个人喜好选择即可，浏览器可以选择Switchy Omega扩展</li></ul><h2 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h2><p>1.通过SSH Tunnel添加服务器SSH信息</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gw6wvjrfp4j316y0u00vm.jpg" alt="image-20211107213349879"></p><p>2.设置动态端口转发，转发到本地某个端口，设置后开启连接</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gw6wvrb5fxj318g0rymzg.jpg" alt="image-20211107213417609"></p><p>3.使用Proxifier 配置socks5代理</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gw6wyps1snj320k0u00yb.jpg" alt="image-20211107213702021"></p>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jumpserver</title>
      <link href="/2024/04/01/ops/jumpserver/"/>
      <url>/2024/04/01/ops/jumpserver/</url>
      
        <content type="html"><![CDATA[<p>jumpserver 堡垒机搭建</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>所在机器：192.168.0.209</p><p>配置文件路径：&#x2F;opt&#x2F;jumpserver   （一般无需任何配置）</p><h2 id="安装管理"><a href="#安装管理" class="headerlink" title="安装管理"></a>安装管理</h2><ul><li>docker安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://github.com/jumpserver/jumpserver/releases/download/v2.9.2/quick_start.sh | bash</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li>使用<code> jmsctl.sh</code>脚本管理jumpserver，脚本位置<code>/opt/jumpserver-installer-v2.7.1</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Installation Commands:</span><br><span class="line">  install           安装 JumpServer</span><br><span class="line">  upgrade [version] 升级 JumpServer</span><br><span class="line">  check_update      Reconfiguration JumpServer</span><br><span class="line">  reconfig          Check <span class="keyword">for</span> updates JumpServer</span><br><span class="line"></span><br><span class="line">Management Commands:</span><br><span class="line">  start             启动 JumpServer</span><br><span class="line">  stop              停止 JumpServer</span><br><span class="line">  close             关闭 JumpServer</span><br><span class="line">  restart           重启 JumpServer</span><br><span class="line">  status            检查 JumpServer</span><br><span class="line">  down              下线 JumpServer </span><br><span class="line"></span><br><span class="line">More Commands:</span><br><span class="line">  backup_db         备份数据库</span><br><span class="line">  <span class="built_in">tail</span> [service]    View <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h2 id="操作文档"><a href="#操作文档" class="headerlink" title="操作文档"></a>操作文档</h2><h3 id="1-用户管理"><a href="#1-用户管理" class="headerlink" title="1.用户管理"></a>1.用户管理</h3><p>![image-20210422144608919](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422144608919.png)</p><h3 id="2-资产管理"><a href="#2-资产管理" class="headerlink" title="2.资产管理"></a>2.资产管理</h3><h3 id="概念说明"><a href="#概念说明" class="headerlink" title="概念说明"></a>概念说明</h3><ul><li><p>普通用户（用户）： 工作人员账户</p></li><li><p>管理用户： 服务器真实用户，如root</p></li><li><p>系统账户： jumpserver在真实服务器上创建的用户</p></li></ul><p>Jumpserver 运行原理为： </p><ol><li>Jumpserver 通过<code>管理用户</code> 登录真实服务器  ，在真实服务器上创建<code>系统用户</code>，系统用户可以为dev  ops  姓名等。    </li><li>授权<code>普通用户</code> 服务器资产 和   <code>系统用户</code> ，比如给普通用户张三授权的<code>系统账户</code>是”zhangsan”,那么张三登录的服务器的用户就是 “zhangsan”</li></ol><h3 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h3><ul><li>管理用户是指jumpserver登录真实服务器的用户，也就是真实服务器的用户，linux一般为<code>root</code>; windows一般为<code>administrator</code></li></ul><p>![image-20210422145054211](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422145054211.png)</p><h3 id="系统用户"><a href="#系统用户" class="headerlink" title="系统用户"></a>系统用户</h3><ul><li>登录到服务器的账户，jumpserver会在真实服务器创建linux用户</li></ul><p>![image-20210422150539157](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422150539157.png)</p><p>![image-20210422150809797](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422150809797.png)</p><h3 id="添加资产"><a href="#添加资产" class="headerlink" title="添加资产"></a>添加资产</h3><p>![image-20210422151526890](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422151526890.png)</p><h3 id="应用管理"><a href="#应用管理" class="headerlink" title="应用管理"></a>应用管理</h3><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><ul><li><p>mysql对应的账户必须开启远程访问权限</p></li><li><p>首先在系统用户中添加<code>mysql</code>真实存在的用户 （相当于一个登录凭证）</p></li></ul><p>![image-20210422153057362](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422153057362.png)</p><ul><li>在应用管理–数据库  配置数据库连接地址</li></ul><p>![image-20210422153354165](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422153354165.png)</p><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><h4 id="1-资产授权"><a href="#1-资产授权" class="headerlink" title="1.资产授权"></a>1.资产授权</h4><p>![image-20210422153855556](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422153855556.png)</p><h4 id="2-应用授权"><a href="#2-应用授权" class="headerlink" title="2.应用授权"></a>2.应用授权</h4><p>![image-20210422154053217](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422154053217.png)</p><h3 id="会话管理"><a href="#会话管理" class="headerlink" title="会话管理"></a>会话管理</h3><h4 id="web终端"><a href="#web终端" class="headerlink" title="web终端"></a>web终端</h4><p>![image-20210422154255831](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210422154255831.png)</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.jumpserver.org/zh/master/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多阶段构建打包项目</title>
      <link href="/2024/04/01/ops/%E5%A4%9A%E9%98%B6%E6%AE%B5%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE/"/>
      <url>/2024/04/01/ops/%E5%A4%9A%E9%98%B6%E6%AE%B5%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>docker 多阶段构建打包项目</p><span id="more"></span><h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><ul><li>拿JAVA项目为例</li></ul><ol><li>使用MVN镜像下载源码并打包项目</li><li>使用jdk镜像，从上面的MVN镜像中复制jar包并启动</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">FROM maven:3.6.3-openjdk-8 AS builder</span><br><span class="line"> <span class="comment">#  AS builder 起别名</span></span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">mkdir</span> /build</span><br><span class="line"><span class="comment"># 创建临时文件</span></span><br><span class="line"></span><br><span class="line">ADD src /build/src</span><br><span class="line"><span class="comment">#将 src目录复制到临时目录</span></span><br><span class="line"></span><br><span class="line">ADD pom.xml /build</span><br><span class="line"><span class="comment"># 将 pom文件复制到临时目录</span></span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">cd</span> /build &amp;&amp; mvn -B -ntp package</span><br><span class="line"><span class="comment"># 打包</span></span><br><span class="line"></span><br><span class="line">FROM adoptopenjdk/openjdk8:alpine-jre</span><br><span class="line"><span class="comment"># 获取jre</span></span><br><span class="line"></span><br><span class="line">COPY --from=builder /build/target/ems-0.0.1-SNAPSHOT.jar /ems.jar</span><br><span class="line"><span class="comment">#从标记点 拷贝jar包 并改名</span></span><br><span class="line"></span><br><span class="line">CMD [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/ems.jar&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 声明运行方式</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>supervisor</title>
      <link href="/2024/04/01/ops/supervisor%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2024/04/01/ops/supervisor%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>进程管理工具</p><span id="more"></span><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>Supervisor类似systemctl，是一个进程管理工具，进程异常可自动重启进程</li><li>优点：易于维护，写法简单，可提供web页面管理进程，无需写守护脚本</li><li>缺点：依赖python环境</li><li>注意： 管理的进程必须要以前台模式运行</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="1-安装Supervisor"><a href="#1-安装Supervisor" class="headerlink" title="1. 安装Supervisor"></a>1. 安装Supervisor</h3><ul><li>方法一、yum安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install supervisor</span><br></pre></td></tr></table></figure><ul><li>方法二、pip安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><h3 id="2-生成主配置文件"><a href="#2-生成主配置文件" class="headerlink" title="2.生成主配置文件"></a>2.生成主配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo_supervisord_conf &gt; /etc/supervisord.conf</span><br></pre></td></tr></table></figure><ul><li>无特殊需求使用默认主配置文件即可</li></ul><h3 id="3-启动Supervisor"><a href="#3-启动Supervisor" class="headerlink" title="3.启动Supervisor"></a>3.启动Supervisor</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl -c <span class="regexp">/etc/</span>supervisord.conf</span><br></pre></td></tr></table></figure><h3 id="4-配置开机启动"><a href="#4-配置开机启动" class="headerlink" title="4.配置开机启动"></a>4.配置开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> supervisord.service</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>为服务编写supervisor配置文件，新建  <code>xxx.ini</code> 文件，内容如下</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[program:名称]<span class="comment">#服务名称，管理服务根据此名称进行管理，必须唯一不能重复</span></span><br><span class="line">directory=/data/wwwroot<span class="comment">#command命令起始路径</span></span><br><span class="line"><span class="built_in">command</span>=/usr/bin/java -jar api.jar  <span class="comment">#启动命令，必须为前台启动命令，比如直接启动jar包，不能使用 nohup 及 &amp; 把进程放在后台</span></span><br><span class="line"></span><br><span class="line">autostart=<span class="literal">true</span><span class="comment">#supervisor启动的时候是否随着同时启动，默认True</span></span><br><span class="line">autorestart=<span class="literal">true</span><span class="comment">#程序异常退出后自动重启</span></span><br><span class="line">startretries = 3<span class="comment">#启动失败自动重试次数，默认是 3</span></span><br><span class="line">startsecs=5<span class="comment">#启动 xxx 秒后没有异常退出，就当作已经正常启动了</span></span><br><span class="line">user = root<span class="comment">#脚本运行的用户身份 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目</span></span><br><span class="line">stderr_logfile=/tmp/blog_stderr.log </span><br><span class="line">stdout_logfile=/tmp/blog_stdout.log </span><br><span class="line">redirect_stderr = <span class="literal">true</span><span class="comment">#把stderr重定向到stdout，默认 false</span></span><br><span class="line">stdout_logfile_maxbytes = 20MB<span class="comment">#stdout日志文件大小，默认 50MB</span></span><br><span class="line">stdout_logfile_backups = 20<span class="comment">#stdout日志文件备份数</span></span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[program:api]</span><br><span class="line">directory=/data/wwwroot/peppapig</span><br><span class="line"><span class="built_in">command</span>=/usr/bin/java -jar api.jar</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">startretries = 3</span><br><span class="line">startsecs=5</span><br><span class="line">redirect_stderr = <span class="literal">true</span></span><br><span class="line">stderr_logfile=/data/wwwlogs/peppapig/api_stderr.log</span><br><span class="line">stdout_logfile=/data/wwwlogs/peppapig/api_stdout.log </span><br><span class="line">stdout_logfile_maxbytes = 20MB</span><br><span class="line">stdout_logfile_backups = 20</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1-无法启动"><a href="#1-无法启动" class="headerlink" title="1.无法启动"></a>1.无法启动</h3><ul><li>检查服务配置文件中的日志路径是否存在</li><li>检查脚本运行的用户名是否存在</li><li>修改无误后运行以下命令启动supervisor</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="根据最新配置文件启动最新配置或有改动的进程"><a href="#根据最新配置文件启动最新配置或有改动的进程" class="headerlink" title="根据最新配置文件启动最新配置或有改动的进程"></a>根据最新配置文件启动最新配置或有改动的进程</h3><ul><li>增删改配置文件后使用以下命令</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">supervisorctl update</span></span><br></pre></td></tr></table></figure><h3 id="查看所有任务的状态"><a href="#查看所有任务的状态" class="headerlink" title="查看所有任务的状态"></a>查看所有任务的状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl status xxx <span class="comment">#服务名</span></span><br><span class="line">supervisorctl status  <span class="comment">#所有服务的状态</span></span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> supervisorctl start xxx  <span class="comment">#服务名</span></span><br><span class="line"> supervisorctl start all  <span class="comment">#启动所有服务</span></span><br></pre></td></tr></table></figure><h3 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> supervisorctl stop xxx  <span class="comment">#服务名</span></span><br><span class="line"> supervisorctl stop all  <span class="comment">#停止所有服务 </span></span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> supervisorctl restart xxx  <span class="comment">#服务名</span></span><br><span class="line">supervisorctl restart all<span class="comment">#重启所有服务名</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.jianshu.com/p/3c70e12b656a</span><br><span class="line">https://blog.csdn.net/lihao21/article/details/77689790</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows程序注册为服务</title>
      <link href="/2024/04/01/ops/windows%E7%A8%8B%E5%BA%8F%E6%B3%A8%E5%86%8C%E4%B8%BA%E6%9C%8D%E5%8A%A1/"/>
      <url>/2024/04/01/ops/windows%E7%A8%8B%E5%BA%8F%E6%B3%A8%E5%86%8C%E4%B8%BA%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>将windows程序注册为服务进行管理</p><span id="more"></span><h2 id="使用工具：instsrv-srvany"><a href="#使用工具：instsrv-srvany" class="headerlink" title="使用工具：instsrv+srvany"></a>使用工具：instsrv+srvany</h2><p>下载链接：<a href="https://pan.baidu.com/s/1gKu_WwVo-TeWXmrGAr9qjw">https://pan.baidu.com/s/1gKu_WwVo-TeWXmrGAr9qjw</a> 提取码：s1vm</p><h2 id="安装instsrv-srvany"><a href="#安装instsrv-srvany" class="headerlink" title="安装instsrv+srvany"></a>安装instsrv+srvany</h2><ol><li>将instsrv.exe和srvany.exe拷贝到<code>C:\WINDOWS\SysWOW64</code>目录下</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1-注册服务"><a href="#1-注册服务" class="headerlink" title="1.注册服务"></a>1.注册服务</h3><p>（1）打开cmd</p><p>（2）运行命令：<code>instsrv xxxxxx C:\WINDOWS\SysWOW64\srvany.exe</code></p><ul><li>xxxxxx为自定义的服务名称</li></ul><h3 id="2-更改注册表"><a href="#2-更改注册表" class="headerlink" title="2. 更改注册表"></a>2. 更改注册表</h3><ol><li><p>打开注册表：（cmd中输入：<code>regedit</code>）</p></li><li><p>ctrl+F，搜索<code>xxxxxx</code>（xxxxxx为上一步注册的服务名）</p></li><li><p>右击<code>xxxxxx</code>  选择  <code>新建项</code>， 名称为<code>Parameters</code>  (Parameters固定，不能修改)</p></li><li><p>在新建项中右键新建以下值，类型选择 <code>字符串值</code></p><p>（1）<code>Application</code> 值 ：  EXE程序绝对路径，如 C:\dir\text.exe</p><p>  (2)  <code>AppDirectory</code> 值： EXE程序所在文件夹路径如：C:\dir</p><p>  (3) <code> AppParameters</code>值：程序启动所需要的参数</p></li></ol><h3 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3.启动服务"></a>3.启动服务</h3><ul><li>打开服务，找到注册的服务名启动即可</li></ul><h3 id="监控服务脚本"><a href="#监控服务脚本" class="headerlink" title="监控服务脚本"></a>监控服务脚本</h3><ul><li>服务自动启动脚本，保存为  bat 格式</li><li>ServerName 即上一步创建的服务名</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rem 定义循环间隔时间和监测的服务：</span><br><span class="line">set secs=60</span><br><span class="line">set srvname=&quot;ServerName&quot; </span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line">echo ========================================</span><br><span class="line">echo == 查询计算机服务的状态， ==</span><br><span class="line">echo == 每间隔%secs%秒种进行一次查询， ==</span><br><span class="line">echo == 如发现其停止，则立即启动。 ==</span><br><span class="line">echo ========================================</span><br><span class="line">echo.</span><br><span class="line">echo 此脚本监测的服务是：%srvname%</span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">if %srvname%. == . goto end</span><br><span class="line"></span><br><span class="line">:chkit</span><br><span class="line">set svrst=0</span><br><span class="line">for /F &quot;tokens=1* delims= &quot; %%a in (&#x27;net start&#x27;) do if /I &quot;%%a %%b&quot; == %srvname% set svrst=1</span><br><span class="line">if %svrst% == 0 net start %srvname%</span><br><span class="line">set svrst=</span><br><span class="line">rem 下面的命令用于延时，否则可能会导致cpu单个核心满载。</span><br><span class="line">ping -n %secs% 127.0.0.1 &gt; nul</span><br><span class="line">goto chkit</span><br><span class="line"></span><br><span class="line">:end</span><br></pre></td></tr></table></figure><ul><li><p>开机启动脚本，保存为 <code>vbs</code> 格式</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> ws=WScript.CreateObject(“WScript.<span class="keyword">Shell</span>”)</span><br><span class="line">ws.<span class="keyword">Run</span> “C:\Users\Administrator\Desktop\aa.bat /start”,0    <span class="comment">//服务自动启动脚本绝对路径</span></span><br></pre></td></tr></table></figure><ul><li>将开机启动脚本放到<code>C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> 目录下</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建 stmp 流媒体服务器</title>
      <link href="/2024/04/01/ops/%E6%90%AD%E5%BB%BAstmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2024/04/01/ops/%E6%90%AD%E5%BB%BAstmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="一、所需资源"><a href="#一、所需资源" class="headerlink" title="一、所需资源"></a>一、所需资源</h3><h4 id="nginx源文件"><a href="#nginx源文件" class="headerlink" title="nginx源文件"></a>nginx源文件</h4><blockquote><p>官网：<a href="https://nginx.org/download/">https://nginx.org/download/</a></p></blockquote><h4 id="nginx-rtmp-module-master-模块源文件"><a href="#nginx-rtmp-module-master-模块源文件" class="headerlink" title="nginx-rtmp-module-master 模块源文件"></a>nginx-rtmp-module-master 模块源文件</h4><blockquote><p>下载地址：<a href="https://github.com/arut/nginx-rtmp-module">https://github.com/arut/nginx-rtmp-module</a></p></blockquote><h3 id="二、配置步骤"><a href="#二、配置步骤" class="headerlink" title="二、配置步骤"></a>二、配置步骤</h3><h4 id="1-编译安装nginx及nginx-rtmp-module-master模块"><a href="#1-编译安装nginx及nginx-rtmp-module-master模块" class="headerlink" title="1.编译安装nginx及nginx-rtmp-module-master模块"></a>1.编译安装nginx及nginx-rtmp-module-master模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx --add-module=/root/nginx-rtmp-module-master</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="2-配置nginx配置文件"><a href="#2-配置nginx配置文件" class="headerlink" title="2.配置nginx配置文件"></a>2.配置nginx配置文件</h4><ul><li><p>配置文件末尾加</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">rtmp</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">1935</span>;</span><br><span class="line">        <span class="attribute">application</span> live &#123;</span><br><span class="line">            <span class="attribute">live</span> <span class="literal">on</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">application</span> hls &#123;</span><br><span class="line">            <span class="attribute">live</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">hls</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">hls_path</span> /tmp/hls;</span><br><span class="line">            <span class="attribute">hls_fragment</span> <span class="number">5s</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>server块中加</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /hls &#123;</span><br><span class="line"> <span class="comment">#解决跨域问题，否则浏览器无法播放</span></span><br><span class="line">           <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">&#x27;*&#x27;</span>;  </span><br><span class="line">           <span class="attribute">add_header</span> Access-Control-Allow-Credentials <span class="string">&quot;true&quot;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Headers  <span class="string">&#x27;token,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,XRequested-With&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">           <span class="section">types</span> &#123;</span><br><span class="line">               application/vnd.apple.<span class="attribute">mpegurl</span> m3u8;</span><br><span class="line">               video/<span class="attribute">mp2t</span>  ;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="attribute">root</span> /tmp;</span><br><span class="line">           <span class="attribute">add_header</span> Cache-Control <span class="literal">no</span>-cache;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><blockquote><p> <strong>注意跨域问题，否则可能会出现VLC可以正常播放，但是用vodeojs无法播放的情况</strong></p></blockquote><blockquote><p> 附上本人完整配置</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line"><span class="comment">#解决跨域问题，否则浏览器无法播放</span></span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">&#x27;*&#x27;</span>;  </span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Credentials <span class="string">&quot;true&quot;</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Headers  <span class="string">&#x27;token,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,XRequested-With&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">#解决跨域问题，否则浏览器无法播放</span></span><br><span class="line">        <span class="section">location</span> /hls &#123;</span><br><span class="line">            <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">&#x27;*&#x27;</span>;  </span><br><span class="line">            <span class="attribute">add_header</span> Access-Control-Allow-Credentials <span class="string">&quot;true&quot;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Methods <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Headers  <span class="string">&#x27;token,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,XRequested-With&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="section">types</span> &#123;</span><br><span class="line">                application/vnd.apple.<span class="attribute">mpegurl</span> m3u8;</span><br><span class="line">                video/<span class="attribute">mp2t</span>  ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="attribute">root</span> /tmp;</span><br><span class="line">            <span class="attribute">add_header</span> Cache-Control <span class="literal">no</span>-cache;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">rtmp</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">1935</span>;</span><br><span class="line">        <span class="attribute">application</span> live &#123;</span><br><span class="line">            <span class="attribute">live</span> <span class="literal">on</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">application</span> hls &#123;</span><br><span class="line">            <span class="attribute">live</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">hls</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">hls_path</span> /tmp/hls;</span><br><span class="line">            <span class="attribute">hls_fragment</span> <span class="number">5s</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="至此已完成rtmp-服务端搭建，只需要推流到rtmp服务端-，-客户端拉流即可。"><a href="#至此已完成rtmp-服务端搭建，只需要推流到rtmp服务端-，-客户端拉流即可。" class="headerlink" title="至此已完成rtmp 服务端搭建，只需要推流到rtmp服务端 ， 客户端拉流即可。"></a>至此已完成<code>rtmp</code> 服务端搭建，只需要推流到<code>rtmp服务端</code> ， 客户端拉流即可。</h4><h4 id="推流拉流教程参见使用ffmpeg推流"><a href="#推流拉流教程参见使用ffmpeg推流" class="headerlink" title="推流拉流教程参见使用ffmpeg推流"></a>推流拉流教程参见<code>使用ffmpeg推流</code></h4>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ios 砸壳</title>
      <link href="/2024/04/01/ops/ios%E5%8F%8D%E7%BC%96%E8%AF%91%E5%8F%8A%E7%A0%B8%E5%A3%B3/"/>
      <url>/2024/04/01/ops/ios%E5%8F%8D%E7%BC%96%E8%AF%91%E5%8F%8A%E7%A0%B8%E5%A3%B3/</url>
      
        <content type="html"><![CDATA[<p>从Appstore直接下载的app是经过加壳的，需要”砸壳”</p><span id="more"></span><h3 id="一、苹果手机环境配置"><a href="#一、苹果手机环境配置" class="headerlink" title="一、苹果手机环境配置"></a>一、苹果手机环境配置</h3><h4 id="1-越狱"><a href="#1-越狱" class="headerlink" title="1.越狱"></a>1.越狱</h4><ul><li><p>12.5 及以下版本推荐使用爱思助手安装<code>unc0ver</code></p></li><li><p>安装<code>unc0ver</code> 后，在设置–通用—描述文件中信任<code>unc0ver</code>证书</p></li><li><p>打开<code>unc0ver</code> 点击 <code>jailbreak</code> ，期间设备会重启，重启之后检查手机是否安装上了 Cydia ，如果没有则重复此步奏，一般在10次内</p></li><li><p>如果<code>unc0ver</code> 提示失败，手动关机，开机，继续打开<code>unc0ver</code> 点击 <code>jailbreak</code>，直到安装上了 Cydia</p></li></ul><h4 id="2-安装frida"><a href="#2-安装frida" class="headerlink" title="2.安装frida"></a>2.安装frida</h4><ul><li>打开cydia添加源：<code>https://build.frida.re</code></li><li>搜索安装软件 <code>frida</code></li></ul><h4 id="3-安装openssh"><a href="#3-安装openssh" class="headerlink" title="3.安装openssh"></a>3.安装openssh</h4><ul><li>搜索安装 <code>openssh</code></li><li>安装完成后，电脑使用ssh协议连接手机ip , 用户名 root  密码：alpine</li></ul><h4 id="4-安装需要杂壳的目标APP"><a href="#4-安装需要杂壳的目标APP" class="headerlink" title="4.安装需要杂壳的目标APP"></a>4.安装需要杂壳的目标APP</h4><h3 id="二、Mac-os-环境配置"><a href="#二、Mac-os-环境配置" class="headerlink" title="二、Mac os 环境配置"></a>二、Mac os 环境配置</h3><h4 id="1-安装基础软件"><a href="#1-安装基础软件" class="headerlink" title="1.安装基础软件"></a>1.安装基础软件</h4><ul><li>python   </li><li>pip</li></ul><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">wget</span> <span class="string">https</span>://<span class="string">bootstrap</span>.<span class="string">pypa</span>.<span class="string">io</span>/<span class="built_in">get-pip.py</span></span><br><span class="line"><span class="string">sudo</span> <span class="string">python</span> <span class="built_in">get-pip.py</span></span><br></pre></td></tr></table></figure><ul><li><p>wget</p></li><li><p>usbmuxd</p></li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>usbmuxd</span><br></pre></td></tr></table></figure><ul><li>清理残留</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> ~/get-pip.py</span><br></pre></td></tr></table></figure><h4 id="2-安装frida-for-mac"><a href="#2-安装frida-for-mac" class="headerlink" title="2.安装frida for mac"></a>2.安装frida for mac</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip <span class="keyword">install</span> frida</span><br></pre></td></tr></table></figure><ul><li>假如报一下错误</li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uninstalling <span class="keyword">a</span> distutils installed project (<span class="literal">six</span>) has been deprecated <span class="keyword">and</span> will be removed <span class="keyword">in</span> <span class="keyword">a</span> future <span class="built_in">version</span>. This is due <span class="built_in">to</span> <span class="keyword">the</span> fact that uninstalling <span class="keyword">a</span> distutils project will only partially uninstall <span class="keyword">the</span> project.</span><br></pre></td></tr></table></figure><ul><li>使用以下命令安装：</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip <span class="keyword">install </span>frida –upgrade –ignore-<span class="keyword">installed </span>six</span><br></pre></td></tr></table></figure><h4 id="3-配置frida-ios-dump环境"><a href="#3-配置frida-ios-dump环境" class="headerlink" title="3.配置frida-ios-dump环境"></a>3.配置frida-ios-dump环境</h4><ul><li>下载源码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /opt/dump &amp;&amp; <span class="built_in">cd</span> /opt/dump &amp;&amp; sudo git <span class="built_in">clone</span> https://github.com/AloneMonkey/frida-ios-dump</span><br></pre></td></tr></table></figure><ul><li>安装依赖</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install -r <span class="regexp">/opt/</span><span class="keyword">dump</span><span class="regexp">/frida-ios-dump/</span>requirements.txt --upgrade</span><br></pre></td></tr></table></figure><ul><li>修改dump.py参数</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/opt/</span><span class="keyword">dump</span><span class="regexp">/frida-ios-dump/</span><span class="keyword">dump</span>.py</span><br></pre></td></tr></table></figure><p>找到如下几行</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">User</span> = <span class="string">&#x27;root&#x27;</span></span><br><span class="line"><span class="attr">Password</span> = <span class="string">&#x27;alpine&#x27;</span></span><br><span class="line"><span class="attr">Host</span> = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line"><span class="attr">Port</span> = <span class="number">2222</span></span><br></pre></td></tr></table></figure><ul><li>Password 改为 alpine ，即手机root密码</li></ul><h3 id="三、开始砸壳"><a href="#三、开始砸壳" class="headerlink" title="三、开始砸壳"></a>三、开始砸壳</h3><h4 id="1-开启端口转发"><a href="#1-开启端口转发" class="headerlink" title="1.开启端口转发"></a>1.开启端口转发</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">iproxy</span> <span class="number">2222</span> <span class="number">22</span></span><br></pre></td></tr></table></figure><h4 id="2-新建终端通过ssh连接手机"><a href="#2-新建终端通过ssh连接手机" class="headerlink" title="2. 新建终端通过ssh连接手机"></a>2. 新建终端通过ssh连接手机</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.xxx </span><br></pre></td></tr></table></figure><h4 id="3-新建终端开始杂壳"><a href="#3-新建终端开始杂壳" class="headerlink" title="3.新建终端开始杂壳"></a>3.新建终端开始杂壳</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python <span class="regexp">/opt/</span><span class="keyword">dump</span><span class="regexp">/frida-ios-dump/</span><span class="keyword">dump</span>.py  应用名称</span><br></pre></td></tr></table></figure><p>如果报错找不到python模块，检查pip安装的模块对应的是哪个python版本，例如：使用的是python3x版本，那么杂壳命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3.x /opt/dump/frida-ios-dump/dump.py  应用名称  <span class="comment">#x为具体版本号，比如我电脑有Python2  python2.7  python3.9 根据实际情况来</span></span><br></pre></td></tr></table></figure><ul><li>应用名称就是手机桌面显示的名称</li><li>杂壳完毕后会在步奏3终端路径生成ipa文件，此文件即是杂壳后的ipa，可以直接使用Hopper Disassembler 进行反编译</li></ul><h2 id="ios反编译"><a href="#ios反编译" class="headerlink" title="ios反编译"></a>ios反编译</h2><h4 id="1-安装Hopper-Disassembler"><a href="#1-安装Hopper-Disassembler" class="headerlink" title="1.安装Hopper Disassembler"></a>1.安装Hopper Disassembler</h4><h4 id="2-安装Class-Decompile"><a href="#2-安装Class-Decompile" class="headerlink" title="2.安装Class-Decompile"></a>2.安装Class-Decompile</h4><ul><li>下载源码</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GitHub https:<span class="regexp">//gi</span>thub.com<span class="regexp">/poboke/</span>Class-Decompile</span><br></pre></td></tr></table></figure><ul><li>将下载的Class Decompile.py文件放到~&#x2F;Library&#x2F;Application Support&#x2F;Hopper&#x2F;Scripts目录里</li></ul><h4 id="3-解压ipa包"><a href="#3-解压ipa包" class="headerlink" title="3.解压ipa包"></a>3.解压ipa包</h4><h4 id="image-20210421101850001-Users-sky-Library-Application-Support-typora-user-images-image-20210421101850001-png"><a href="#image-20210421101850001-Users-sky-Library-Application-Support-typora-user-images-image-20210421101850001-png" class="headerlink" title="![image-20210421101850001](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210421101850001.png)"></a>![image-20210421101850001](&#x2F;Users&#x2F;sky&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20210421101850001.png)</h4><h4 id="4-找到二进制文件拖入到Hopper-Disassembler"><a href="#4-找到二进制文件拖入到Hopper-Disassembler" class="headerlink" title="4.找到二进制文件拖入到Hopper Disassembler"></a>4.找到二进制文件拖入到Hopper Disassembler</h4><h4 id="5-导出伪代码"><a href="#5-导出伪代码" class="headerlink" title="5.导出伪代码"></a>5.导出伪代码</h4><p>等待Hopper Disassembler分析完成后，点击菜单栏 Scripts – Class-Decompile  – Decompile all class</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>www.jianshu.com<span class="regexp">/p/</span><span class="number">7</span>aa9b9488ffa</span><br><span class="line">https:<span class="regexp">//</span>www.jianshu.com<span class="regexp">/p/</span><span class="number">5</span>b465c9e2fb2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
